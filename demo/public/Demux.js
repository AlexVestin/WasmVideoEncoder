
var Demuxer8 = (function() {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
  return (
function(Demuxer8) {
  Demuxer8 = Demuxer8 || {};

var Module=typeof Demuxer8!=="undefined"?Demuxer8:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module["arguments"]=[];Module["thisProgram"]="./this.program";Module["quit"]=(function(status,toThrow){throw toThrow});Module["preRun"]=[];Module["postRun"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(Module["ENVIRONMENT"]){throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)")}var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+"/";var nodeFS;var nodePath;Module["read"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);ret=nodeFS["readFileSync"](filename);return binary?ret:ret.toString()};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}Module["arguments"]=process["argv"].slice(2);process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process["on"]("unhandledRejection",abort);Module["quit"]=(function(status){process["exit"](status)});Module["inspect"]=(function(){return"[Emscripten Module object]"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){Module["read"]=function shell_read(f){return read(f)}}Module["readBinary"]=function readBinary(f){var data;if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof quit==="function"){Module["quit"]=(function(status){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1)}else{scriptDirectory=""}Module["read"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module["readBinary"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module["setWindowTitle"]=(function(title){document.title=title})}else{throw new Error("environment detection error")}var out=Module["print"]||(typeof console!=="undefined"?console.log.bind(console):typeof print!=="undefined"?print:null);var err=Module["printErr"]||(typeof printErr!=="undefined"?printErr:typeof console!=="undefined"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;assert(typeof Module["memoryInitializerPrefixURL"]==="undefined","Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["pthreadMainPrefixURL"]==="undefined","Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["cdInitializerPrefixURL"]==="undefined","Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["filePackagePrefixURL"]==="undefined","Module.filePackagePrefixURL option was removed, use Module.locateFile instead");var STACK_ALIGN=16;stackSave=stackRestore=stackAlloc=(function(){abort("cannot use the stack before compiled code is ready to run, and has provided stack access")});function staticAlloc(size){assert(!staticSealed);var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;assert(STATICTOP<TOTAL_MEMORY,"not enough memory for static allocation - increase TOTAL_MEMORY");return ret}function dynamicAlloc(size){assert(DYNAMICTOP_PTR);var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size/factor)*factor;return ret}function getNativeTypeSize(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return 4}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var asm2wasmImports={"f64-rem":(function(x,y){return x%y}),"debugger":(function(){debugger})};var functionPointers=new Array(0);var GLOBAL_BASE=1024;function getSafeHeapType(bytes,isFloat){switch(bytes){case 1:return"i8";case 2:return"i16";case 4:return isFloat?"float":"i32";case 8:return"double";default:assert(0)}}function SAFE_HEAP_STORE(dest,value,bytes,isFloat){if(dest<=0)abort("segmentation fault storing "+bytes+" bytes to address "+dest);if(dest%bytes!==0)abort("alignment error storing to address "+dest+", which was expected to be aligned to a multiple of "+bytes);if(staticSealed){if(dest+bytes>HEAP32[DYNAMICTOP_PTR>>2])abort("segmentation fault, exceeded the top of the available dynamic heap when storing "+bytes+" bytes to address "+dest+". STATICTOP="+STATICTOP+", DYNAMICTOP="+HEAP32[DYNAMICTOP_PTR>>2]);assert(DYNAMICTOP_PTR);assert(HEAP32[DYNAMICTOP_PTR>>2]<=TOTAL_MEMORY)}else{if(dest+bytes>STATICTOP)abort("segmentation fault, exceeded the top of the available static heap when storing "+bytes+" bytes to address "+dest+". STATICTOP="+STATICTOP)}setValue(dest,value,getSafeHeapType(bytes,isFloat),1)}function SAFE_HEAP_STORE_D(dest,value,bytes){SAFE_HEAP_STORE(dest,value,bytes,true)}function SAFE_HEAP_LOAD(dest,bytes,unsigned,isFloat){if(dest<=0)abort("segmentation fault loading "+bytes+" bytes from address "+dest);if(dest%bytes!==0)abort("alignment error loading from address "+dest+", which was expected to be aligned to a multiple of "+bytes);if(staticSealed){if(dest+bytes>HEAP32[DYNAMICTOP_PTR>>2])abort("segmentation fault, exceeded the top of the available dynamic heap when loading "+bytes+" bytes from address "+dest+". STATICTOP="+STATICTOP+", DYNAMICTOP="+HEAP32[DYNAMICTOP_PTR>>2]);assert(DYNAMICTOP_PTR);assert(HEAP32[DYNAMICTOP_PTR>>2]<=TOTAL_MEMORY)}else{if(dest+bytes>STATICTOP)abort("segmentation fault, exceeded the top of the available static heap when loading "+bytes+" bytes from address "+dest+". STATICTOP="+STATICTOP)}var type=getSafeHeapType(bytes,isFloat);var ret=getValue(dest,type,1);if(unsigned)ret=unSign(ret,parseInt(type.substr(1)),1);return ret}function SAFE_HEAP_LOAD_D(dest,bytes,unsigned){return SAFE_HEAP_LOAD(dest,bytes,unsigned,true)}function segfault(){abort("segmentation fault")}function alignfault(){abort("alignment fault")}var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";if(noSafe){switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}else{switch(type){case"i1":SAFE_HEAP_STORE(ptr|0,value|0,1);break;case"i8":SAFE_HEAP_STORE(ptr|0,value|0,1);break;case"i16":SAFE_HEAP_STORE(ptr|0,value|0,2);break;case"i32":SAFE_HEAP_STORE(ptr|0,value|0,4);break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],SAFE_HEAP_STORE(ptr|0,tempI64[0]|0,4),SAFE_HEAP_STORE(ptr+4|0,tempI64[1]|0,4);break;case"float":SAFE_HEAP_STORE_D(ptr|0,Math_fround(value),4);break;case"double":SAFE_HEAP_STORE_D(ptr|0,+value,8);break;default:abort("invalid type for setValue: "+type)}}}function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";if(noSafe){switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for getValue: "+type)}}else{switch(type){case"i1":return SAFE_HEAP_LOAD(ptr|0,1,0)|0;case"i8":return SAFE_HEAP_LOAD(ptr|0,1,0)|0;case"i16":return SAFE_HEAP_LOAD(ptr|0,2,0)|0;case"i32":return SAFE_HEAP_LOAD(ptr|0,4,0)|0;case"i64":return SAFE_HEAP_LOAD(ptr|0,8,0)|0;case"float":return Math_fround(SAFE_HEAP_LOAD_D(ptr|0,4,0));case"double":return+SAFE_HEAP_LOAD_D(ptr|0,8,0);default:abort("invalid type for getValue: "+type)}}return null}var ALLOC_STATIC=2;var ALLOC_NONE=4;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof _malloc==="function"?_malloc:staticAlloc,stackAlloc,staticAlloc,dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}assert(type,"Must know what type to store in allocate!");if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function getMemory(size){if(!staticSealed)return staticAlloc(size);if(!runtimeInitialized)return dynamicAlloc(size);return _malloc(size)}function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){assert(ptr+i<TOTAL_MEMORY);t=SAFE_HEAP_LOAD(ptr+i|0,1,1)|0;hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){assert(typeof maxBytesToWrite=="number","stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function demangle(func){warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func}function demangleAll(text){var regex=/__Z[\w\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:y+" ["+x+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;var MIN_TOTAL_MEMORY=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module["buffer"]=buffer=buf}function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function writeStackCookie(){assert((STACK_MAX&3)==0);HEAPU32[(STACK_MAX>>2)-1]=34821223;HEAPU32[(STACK_MAX>>2)-2]=2310721022}function checkStackCookie(){if(HEAPU32[(STACK_MAX>>2)-1]!=34821223||HEAPU32[(STACK_MAX>>2)-2]!=2310721022){abort("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x"+HEAPU32[(STACK_MAX>>2)-2].toString(16)+" "+HEAPU32[(STACK_MAX>>2)-1].toString(16))}if(HEAP32[0]!==1668509029)throw"Runtime error: The application has corrupted its heap memory area (address zero)!"}function abortStackOverflow(allocSize){abort("Stack overflow! Attempted to allocate "+allocSize+" bytes on the stack, but stack has only "+(STACK_MAX-stackSave()+allocSize)+" bytes available!")}function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}if(!Module["reallocBuffer"])Module["reallocBuffer"]=(function(size){var ret;try{var oldHEAP8=HEAP8;ret=new ArrayBuffer(size);var temp=new Int8Array(ret);temp.set(oldHEAP8)}catch(e){return false}var success=_emscripten_replace_memory(ret);if(!success)return false;return ret});function enlargeMemory(){assert(HEAP32[DYNAMICTOP_PTR>>2]>TOTAL_MEMORY);var PAGE_MULTIPLE=Module["usingWasm"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;var LIMIT=2147483648-PAGE_MULTIPLE;if(HEAP32[DYNAMICTOP_PTR>>2]>LIMIT){err("Cannot enlarge memory, asked to go up to "+HEAP32[DYNAMICTOP_PTR>>2]+" bytes, but the limit is "+LIMIT+" bytes!");return false}var OLD_TOTAL_MEMORY=TOTAL_MEMORY;TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);while(TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2]){if(TOTAL_MEMORY<=536870912){TOTAL_MEMORY=alignUp(2*TOTAL_MEMORY,PAGE_MULTIPLE)}else{TOTAL_MEMORY=Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,PAGE_MULTIPLE),LIMIT);if(TOTAL_MEMORY===OLD_TOTAL_MEMORY){warnOnce("Cannot ask for more memory since we reached the practical limit in browsers (which is just below 2GB), so the request would have failed. Requesting only "+TOTAL_MEMORY)}}}var start=Date.now();var replacement=Module["reallocBuffer"](TOTAL_MEMORY);if(!replacement||replacement.byteLength!=TOTAL_MEMORY){err("Failed to grow the heap from "+OLD_TOTAL_MEMORY+" bytes to "+TOTAL_MEMORY+" bytes, not enough memory!");if(replacement){err("Expected to get back a buffer of size "+TOTAL_MEMORY+" bytes, but instead got back a buffer of size "+replacement.byteLength)}TOTAL_MEMORY=OLD_TOTAL_MEMORY;return false}updateGlobalBuffer(replacement);updateGlobalBufferViews();if(!Module["usingWasm"]){err("Warning: Enlarging memory arrays, this is not fast! "+[OLD_TOTAL_MEMORY,TOTAL_MEMORY])}return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,"byteLength").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||1073741824;if(TOTAL_MEMORY<TOTAL_STACK)err("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");assert(typeof Int32Array!=="undefined"&&typeof Float64Array!=="undefined"&&Int32Array.prototype.subarray!==undefined&&Int32Array.prototype.set!==undefined,"JS engine does not provide full typed array support");if(Module["buffer"]){buffer=Module["buffer"];assert(buffer.byteLength===TOTAL_MEMORY,"provided buffer should be "+TOTAL_MEMORY+" bytes, but it is "+buffer.byteLength)}else{if(typeof WebAssembly==="object"&&typeof WebAssembly.Memory==="function"){assert(TOTAL_MEMORY%WASM_PAGE_SIZE===0);Module["wasmMemory"]=new WebAssembly.Memory({"initial":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module["wasmMemory"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}assert(buffer.byteLength===TOTAL_MEMORY);Module["buffer"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw"Runtime error: expected the system to be little-endian!";function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func)}else{Module["dynCall_vi"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){checkStackCookie();if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){checkStackCookie();callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){checkStackCookie();callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){checkStackCookie();if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function writeArrayToMemory(array,buffer){assert(array.length>=0,"writeArrayToMemory array must have a length (should be an array or typed array)");HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){assert(str.charCodeAt(i)===str.charCodeAt(i)&255);SAFE_HEAP_STORE(buffer++|0,str.charCodeAt(i)|0,1)}if(!dontAddNull)SAFE_HEAP_STORE(buffer|0,0|0,1)}function unSign(value,bits,ignore){if(value>=0){return value}return bits<=32?2*Math.abs(1<<bits-1)+value:Math.pow(2,bits)+value}assert(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_fround=Math.fround;var Math_min=Math.min;var Math_trunc=Math.trunc;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;var runDependencyTracking={};function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(id){assert(!runDependencyTracking[id]);runDependencyTracking[id]=1;if(runDependencyWatcher===null&&typeof setInterval!=="undefined"){runDependencyWatcher=setInterval((function(){if(ABORT){clearInterval(runDependencyWatcher);runDependencyWatcher=null;return}var shown=false;for(var dep in runDependencyTracking){if(!shown){shown=true;err("still waiting on run dependencies:")}err("dependency: "+dep)}if(shown){err("(end of list)")}}),1e4)}}else{err("warning: run dependency added without ID")}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(id){assert(runDependencyTracking[id]);delete runDependencyTracking[id]}else{err("warning: run dependency removed without ID")}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};var FS={error:(function(){abort("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1")}),init:(function(){FS.error()}),createDataFile:(function(){FS.error()}),createPreloadedFile:(function(){FS.error()}),createLazyFile:(function(){FS.error()}),open:(function(){FS.error()}),mkdev:(function(){FS.error()}),registerDevice:(function(){FS.error()}),analyzePath:(function(){FS.error()}),loadFilesFromDB:(function(){FS.error()}),ErrnoError:function ErrnoError(){FS.error()}};Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile="Demux.wast";var wasmBinaryFile="Demux.wasm";var asmjsCodeFile="Demux.temp.asm.js";if(!isDataURI(wasmTextFile)){wasmTextFile=locateFile(wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=locateFile(asmjsCodeFile)}var wasmPageSize=64*1024;var info={"global":null,"env":null,"asm2wasm":asm2wasmImports,"parent":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module["buffer"];if(newBuffer.byteLength<oldBuffer.byteLength){err("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function getBinary(){try{if(Module["wasmBinary"]){return new Uint8Array(Module["wasmBinary"])}if(Module["readBinary"]){return Module["readBinary"](wasmBinaryFile)}else{throw"both async and sync fetching of the wasm failed"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module["wasmBinary"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then((function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!=="object"){abort("No WebAssembly support found. Build with -s WASM=0 to target JavaScript instead.");err("no native wasm support detected");return false}if(!(Module["wasmMemory"]instanceof WebAssembly.Memory)){err("no native wasm Memory in use");return false}env["memory"]=Module["wasmMemory"];info["global"]={"NaN":NaN,"Infinity":Infinity};info["global.Math"]=Math;info["env"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module["asm"]=exports;Module["usingWasm"]=true;removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){err("Module.instantiateWasm callback failed with error: "+e);return false}}var trueModule=Module;function receiveInstantiatedSource(output){assert(Module===trueModule,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?");trueModule=null;receiveInstance(output["instance"],output["module"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver,(function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)}))}if(!Module["wasmBinary"]&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&typeof fetch==="function"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:"same-origin"}),info).then(receiveInstantiatedSource,(function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module["asmPreload"]=Module["asm"];var asmjsReallocBuffer=Module["reallocBuffer"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module["usingWasm"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module["buffer"];var oldSize=old.byteLength;if(Module["usingWasm"]){try{var result=Module["wasmMemory"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module["buffer"]=Module["wasmMemory"].buffer}else{return null}}catch(e){console.error("Module.reallocBuffer: Attempted to grow from "+oldSize+" bytes to "+size+" bytes, but got error: "+e);return null}}});Module["reallocBuffer"]=(function(size){if(finalMethod==="asmjs"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod="";Module["asm"]=(function(global,env,providedBuffer){if(!env["table"]){var TABLE_SIZE=Module["wasmTableSize"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module["wasmMaxTableSize"];if(typeof WebAssembly==="object"&&typeof WebAssembly.Table==="function"){if(MAX_TABLE_SIZE!==undefined){env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,"maximum":MAX_TABLE_SIZE,"element":"anyfunc"})}else{env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,element:"anyfunc"})}}else{env["table"]=new Array(TABLE_SIZE)}Module["wasmTable"]=env["table"]}if(!env["__memory_base"]){env["__memory_base"]=Module["STATIC_BASE"]}if(!env["__table_base"]){env["__table_base"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);assert(exports,"no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: http://kripken.github.io/emscripten-site/docs/compiling/WebAssembly.html#binaryen-methods");return exports})}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+2143856;__ATINIT__.push({func:(function(){___emscripten_environ_constructor()})});var STATIC_BUMP=2143856;Module["STATIC_BASE"]=STATIC_BASE;Module["STATIC_BUMP"]=STATIC_BUMP;var tempDoublePtr=STATICTOP;STATICTOP+=16;assert(tempDoublePtr%8==0);var ENV={};function ___buildEnvironment(environ){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV["USER"]=ENV["LOGNAME"]="web_user";ENV["PATH"]="/";ENV["PWD"]="/";ENV["HOME"]="/home/web_user";ENV["LANG"]="C.UTF-8";ENV["_"]=Module["thisProgram"];poolPtr=getMemory(TOTAL_ENV_SIZE);envPtr=getMemory(MAX_ENV_VALUES*4);SAFE_HEAP_STORE(envPtr|0,poolPtr|0,4);SAFE_HEAP_STORE(environ|0,envPtr|0,4)}else{envPtr=SAFE_HEAP_LOAD(environ|0,4,0)|0;poolPtr=SAFE_HEAP_LOAD(envPtr|0,4,0)|0}var strings=[];var totalSize=0;for(var key in ENV){if(typeof ENV[key]==="string"){var line=key+"="+ENV[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error("Environment size exceeded TOTAL_ENV_SIZE!")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);SAFE_HEAP_STORE(envPtr+i*ptrSize|0,poolPtr|0,4);poolPtr+=line.length+1}SAFE_HEAP_STORE(envPtr+strings.length*ptrSize|0,0|0,4)}function ___lock(){}var SYSCALLS={buffers:[null,[],[]],printChar:(function(stream,curr){var buffer=SYSCALLS.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=SAFE_HEAP_LOAD(SYSCALLS.varargs-4|0,4,0)|0;return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);SAFE_HEAP_STORE(result|0,stream.position|0,4);if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function flush_NO_FILESYSTEM(){var fflush=Module["_fflush"];if(fflush)fflush(0);var buffers=SYSCALLS.buffers;if(buffers[1].length)SYSCALLS.printChar(1,10);if(buffers[2].length)SYSCALLS.printChar(2,10)}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;for(var i=0;i<iovcnt;i++){var ptr=SAFE_HEAP_LOAD(iov+i*8|0,4,0)|0;var len=SAFE_HEAP_LOAD(iov+(i*8+4)|0,4,0)|0;for(var j=0;j<len;j++){SYSCALLS.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall195(which,varargs){SYSCALLS.varargs=varargs;try{var path=SYSCALLS.getStr(),buf=SYSCALLS.get();return SYSCALLS.doStat(FS.stat,path,buf)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall220(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),dirp=SYSCALLS.get(),count=SYSCALLS.get();if(!stream.getdents){stream.getdents=FS.readdir(stream.path)}var pos=0;while(stream.getdents.length>0&&pos+268<=count){var id;var type;var name=stream.getdents.pop();if(name[0]==="."){id=1;type=4}else{var child=FS.lookupNode(stream.node,name);id=child.id;type=FS.isChrdev(child.mode)?2:FS.isDir(child.mode)?4:FS.isLink(child.mode)?10:8}SAFE_HEAP_STORE(dirp+pos|0,id|0,4);SAFE_HEAP_STORE(dirp+pos+4|0,stream.position|0,4);SAFE_HEAP_STORE(dirp+pos+8|0,268|0,2);SAFE_HEAP_STORE(dirp+pos+10|0,type|0,1);stringToUTF8(name,dirp+pos+11,256);pos+=268}return pos}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___setErrNo(value){if(Module["___errno_location"])SAFE_HEAP_STORE(Module["___errno_location"]()|0,value|0,4);else err("failed to set errno from JS");return value}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall3(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),buf=SYSCALLS.get(),count=SYSCALLS.get();return FS.read(stream,HEAP8,buf,count)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function _abort(){Module["abort"]()}function _clock(){if(_clock.start===undefined)_clock.start=Date.now();return(Date.now()-_clock.start)*(1e6/1e3)|0}function _emscripten_get_now(){abort()}function _emscripten_get_now_is_monotonic(){return ENVIRONMENT_IS_NODE||typeof dateNow!=="undefined"||(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&self["performance"]&&self["performance"]["now"]}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if(clk_id===1&&_emscripten_get_now_is_monotonic()){now=_emscripten_get_now()}else{___setErrNo(ERRNO_CODES.EINVAL);return-1}SAFE_HEAP_STORE(tp|0,now/1e3|0|0,4);SAFE_HEAP_STORE(tp+4|0,now%1e3*1e3*1e3|0|0,4);return 0}function __exit(status){exit(status)}function _exit(status){__exit(status)}var _fabs=Math_abs;function _getenv(name){if(name===0)return 0;name=Pointer_stringify(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _gettimeofday(ptr){var now=Date.now();SAFE_HEAP_STORE(ptr|0,now/1e3|0|0,4);SAFE_HEAP_STORE(ptr+4|0,now%1e3*1e3|0|0,4);return 0}var ___tm_timezone=allocate(intArrayFromString("GMT"),"i8",ALLOC_STATIC);function _gmtime_r(time,tmPtr){var date=new Date((SAFE_HEAP_LOAD(time|0,4,0)|0)*1e3);SAFE_HEAP_STORE(tmPtr|0,date.getUTCSeconds()|0,4);SAFE_HEAP_STORE(tmPtr+4|0,date.getUTCMinutes()|0,4);SAFE_HEAP_STORE(tmPtr+8|0,date.getUTCHours()|0,4);SAFE_HEAP_STORE(tmPtr+12|0,date.getUTCDate()|0,4);SAFE_HEAP_STORE(tmPtr+16|0,date.getUTCMonth()|0,4);SAFE_HEAP_STORE(tmPtr+20|0,date.getUTCFullYear()-1900|0,4);SAFE_HEAP_STORE(tmPtr+24|0,date.getUTCDay()|0,4);SAFE_HEAP_STORE(tmPtr+36|0,0|0,4);SAFE_HEAP_STORE(tmPtr+32|0,0|0,4);var start=Date.UTC(date.getUTCFullYear(),0,1,0,0,0,0);var yday=(date.getTime()-start)/(1e3*60*60*24)|0;SAFE_HEAP_STORE(tmPtr+28|0,yday|0,4);SAFE_HEAP_STORE(tmPtr+40|0,___tm_timezone|0,4);return tmPtr}function _llvm_exp2_f32(x){return Math.pow(2,x)}function _llvm_exp2_f64(){return _llvm_exp2_f32.apply(null,arguments)}function _llvm_log2_f32(x){return Math.log(x)/Math.LN2}function _llvm_stackrestore(p){var self=_llvm_stacksave;var ret=self.LLVM_SAVEDSTACKS[p];self.LLVM_SAVEDSTACKS.splice(p,1);stackRestore(ret)}function _llvm_stacksave(){var self=_llvm_stacksave;if(!self.LLVM_SAVEDSTACKS){self.LLVM_SAVEDSTACKS=[]}self.LLVM_SAVEDSTACKS.push(stackSave());return self.LLVM_SAVEDSTACKS.length-1}var _llvm_trunc_f64=Math_trunc;function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}function _usleep(useconds){var msec=useconds/1e3;if((ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&self["performance"]&&self["performance"]["now"]){var start=self["performance"]["now"]();while(self["performance"]["now"]()-start<msec){}}else{var start=Date.now();while(Date.now()-start<msec){}}return 0}function _nanosleep(rqtp,rmtp){var seconds=SAFE_HEAP_LOAD(rqtp|0,4,0)|0;var nanoseconds=SAFE_HEAP_LOAD(rqtp+4|0,4,0)|0;if(rmtp!==0){SAFE_HEAP_STORE(rmtp|0,0|0,4);SAFE_HEAP_STORE(rmtp+4|0,0|0,4)}return _usleep(seconds*1e6+nanoseconds/1e3)}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=SAFE_HEAP_LOAD(tm+40|0,4,0)|0;var date={tm_sec:SAFE_HEAP_LOAD(tm|0,4,0)|0,tm_min:SAFE_HEAP_LOAD(tm+4|0,4,0)|0,tm_hour:SAFE_HEAP_LOAD(tm+8|0,4,0)|0,tm_mday:SAFE_HEAP_LOAD(tm+12|0,4,0)|0,tm_mon:SAFE_HEAP_LOAD(tm+16|0,4,0)|0,tm_year:SAFE_HEAP_LOAD(tm+20|0,4,0)|0,tm_wday:SAFE_HEAP_LOAD(tm+24|0,4,0)|0,tm_yday:SAFE_HEAP_LOAD(tm+28|0,4,0)|0,tm_isdst:SAFE_HEAP_LOAD(tm+32|0,4,0)|0,tm_gmtoff:SAFE_HEAP_LOAD(tm+36|0,4,0)|0,tm_zone:tm_zone?Pointer_stringify(tm_zone):""};var pattern=Pointer_stringify(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value==="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={"%a":(function(date){return WEEKDAYS[date.tm_wday].substring(0,3)}),"%A":(function(date){return WEEKDAYS[date.tm_wday]}),"%b":(function(date){return MONTHS[date.tm_mon].substring(0,3)}),"%B":(function(date){return MONTHS[date.tm_mon]}),"%C":(function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)}),"%d":(function(date){return leadingNulls(date.tm_mday,2)}),"%e":(function(date){return leadingSomething(date.tm_mday,2," ")}),"%g":(function(date){return getWeekBasedYear(date).toString().substring(2)}),"%G":(function(date){return getWeekBasedYear(date)}),"%H":(function(date){return leadingNulls(date.tm_hour,2)}),"%I":(function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)}),"%j":(function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)}),"%m":(function(date){return leadingNulls(date.tm_mon+1,2)}),"%M":(function(date){return leadingNulls(date.tm_min,2)}),"%n":(function(){return"\n"}),"%p":(function(date){if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}else{return"PM"}}),"%S":(function(date){return leadingNulls(date.tm_sec,2)}),"%t":(function(){return"\t"}),"%u":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()||7}),"%U":(function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?"01":"00"}),"%V":(function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return"53"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return"01"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)}),"%w":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()}),"%W":(function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?"01":"00"}),"%y":(function(date){return(date.tm_year+1900).toString().substring(2)}),"%Y":(function(date){return date.tm_year+1900}),"%z":(function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)}),"%Z":(function(date){return date.tm_zone}),"%%":(function(){return"%"})};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function _emscripten_get_now_actual(){var t=process["hrtime"]();return t[0]*1e3+t[1]/1e6}}else if(typeof dateNow!=="undefined"){_emscripten_get_now=dateNow}else if(typeof self==="object"&&self["performance"]&&typeof self["performance"]["now"]==="function"){_emscripten_get_now=(function(){return self["performance"]["now"]()})}else if(typeof performance==="object"&&typeof performance["now"]==="function"){_emscripten_get_now=(function(){return performance["now"]()})}else{_emscripten_get_now=Date.now}DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;assert(DYNAMIC_BASE<TOTAL_MEMORY,"TOTAL_MEMORY not big enough for stack");function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var debug_table_dd=["0","_sinh","_cosh","_tanh","_sin","_cos","_tan","_atan","_asin","_acos","_exp","_log","_fabs","_etime","0","0"];var debug_table_did=["0"];var debug_table_didd=["0"];var debug_table_fii=["0","_sbr_sum_square_c"];var debug_table_fiii=["0","_avpriv_scalarproduct_float_c"];var debug_table_fiiii=["0","_ppp_pvq_search_c"];var debug_table_ii=["0","_context_to_name_8845","_av_default_item_name","_sws_context_to_name","_format_to_name","_format_child_class_next","_get_category","_ff_avio_child_class_next","_urlcontext_to_name","_ff_urlcontext_child_class_next","_ogg_probe","_ogg_read_header","_ogg_read_close","_flv_probe","_flv_read_header","_flv_read_close","_avi_probe","_avi_read_header","_avi_read_close","_img_read_probe","_ff_img_read_header","_img_read_close","_matroska_probe","_matroska_read_header","_matroska_read_close","_mov_probe","_mov_read_header","_mov_read_close","_mp3_read_probe","_mp3_read_header","_mpegps_probe","_mpegps_read_header","_context_to_name","_codec_child_class_next","_get_category_5528","_ff_h263_decode_init","_ff_h263_decode_end","_h264_decode_init","_h264_decode_end","_hevc_decode_init","_hevc_decode_free","_ff_mjpeg_decode_init","_ff_mjpeg_decode_end","_mpeg_decode_init","_mpeg_decode_end","_decode_init","_decode_end","_theora_decode_init","_vp3_decode_end","_vp3_decode_init","_ff_vp8_decode_init","_ff_vp8_decode_free","_vp9_decode_init","_vp9_decode_free","_aac_decode_init","_aac_decode_close","_ac3_decode_init","_ac3_decode_end","_decode_init_5369","_opus_decode_init","_opus_decode_close","_vorbis_decode_init","_vorbis_decode_close","_ass_decode_init","_ff_ass_subtitle_header_default","_resample_flush","_ac3_parse_init","_mpeg4video_parse_init","_vp9_superframe_split_init","_ff_bsf_child_class_next","___stdio_close","_av_buffer_allocz","_av_buffer_alloc","_sum_abs_dctelem_c","_ac3_compute_mantissa_size_c","_avio_rb16","_avio_rl16","_io_short_seek","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_iii=["0","_format_child_next","_ff_avio_child_next","_urlcontext_child_next","_ogg_read_packet","_flv_read_packet","_avi_read_packet","_ff_img_read_packet","_matroska_read_packet","_mov_read_packet","_mp3_read_packet","_mpegps_read_packet","_codec_child_next","_ogm_header","_ogm_packet","_skeleton_header","_daala_header","_daala_packet","_dirac_header","_speex_header","_speex_packet","_vorbis_header","_vorbis_packet","_theora_header","_theora_packet","_flac_header","_celt_header","_opus_header","_opus_packet","_vp8_header","_vp8_packet","_old_dirac_header","_old_flac_header","_ogm_dshow_header","_null_filter","_vp9_superframe_split_filter","_bsf_child_next","_color_table_compare","_avcodec_default_get_format","_ff_h263_decode_mb","_mpeg4_decode_studio_mb","_mpeg4_decode_mb","_mpeg4_decode_partitioned_mb","_channel_reorder_unknown","_channel_reorder_vorbis","_ac3_max_msb_abs_int16_c","_hls_decode_entry","_decode_slice_8078","_ff_startcode_find_candidate_c","_descriptor_compare","_io_read_pause","_ignore_err","_sort","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_iiii=["0","_set_compensation","_mov_read_aclr","_mov_read_avid","_mov_read_ares","_mov_read_avss","_mov_read_av1c","_mov_read_chpl","_mov_read_stco","_mov_read_colr","_mov_read_ctts","_mov_read_default","_mov_read_dpxe","_mov_read_dref","_mov_read_elst","_mov_read_enda","_mov_read_fiel","_mov_read_adrm","_mov_read_ftyp","_mov_read_glbl","_mov_read_hdlr","_mov_read_ilst","_mov_read_jp2h","_mov_read_mdat","_mov_read_mdhd","_mov_read_meta","_mov_read_moof","_mov_read_moov","_mov_read_mvhd","_mov_read_svq3","_mov_read_alac","_mov_read_pasp","_mov_read_sidx","_mov_read_stps","_mov_read_strf","_mov_read_stsc","_mov_read_stsd","_mov_read_stss","_mov_read_stsz","_mov_read_stts","_mov_read_tkhd","_mov_read_tfdt","_mov_read_tfhd","_mov_read_trak","_mov_read_tmcd","_mov_read_chap","_mov_read_trex","_mov_read_trun","_mov_read_wave","_mov_read_esds","_mov_read_dac3","_mov_read_dec3","_mov_read_ddts","_mov_read_wide","_mov_read_wfex","_mov_read_cmov","_mov_read_chan","_mov_read_dvc1","_mov_read_sbgp","_mov_read_uuid","_mov_read_targa_y216","_mov_read_free","_mov_read_custom","_mov_read_frma","_mov_read_senc","_mov_read_saiz","_mov_read_saio","_mov_read_pssh","_mov_read_schm","_mov_read_tenc","_mov_read_dfla","_mov_read_st3d","_mov_read_sv3d","_mov_read_dops","_mov_read_smdm","_mov_read_coll","_mov_read_vpcc","_mov_read_mdcv","_mov_read_clli","_ff_mpeg4video_split","___stdout_write","___stdio_seek","___stdio_write","_sn_write","_read_packet","_avcodec_default_get_buffer2","_vorbis_floor1_decode","_vorbis_floor0_decode","_ff_crcA001_update","_mov_read_keys","_mov_read_udta_string","_dyn_buf_write","_io_write_packet","_io_read_packet","_do_read","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_iiiii=["0","_ff_h263_decode_frame","_h264_decode_frame","_hevc_decode_frame","_ff_mjpeg_decode_frame","_mpeg_decode_frame","_vp3_decode_frame","_ff_vp8_decode_frame","_vp9_decode_frame","_aac_decode_frame","_ac3_decode_frame","_decode_frame","_opus_decode_packet","_vorbis_decode_frame","_ass_decode_frame","_srt_decode_frame","_webvtt_decode_frame","_vp8_decode_mb_row_no_filter","_vp8_decode_mb_row_sliced","_hls_decode_entry_wpp","_mov_metadata_int8_no_padding","_mov_metadata_track_or_disc_number","_mov_metadata_gnre","_mov_metadata_int8_bypass_padding","_gamma_convert","_lum_convert","_lum_h_scale","_chr_convert","_chr_h_scale","_no_chr_scale","_lum_planar_vscale","_chr_planar_vscale","_packed_vscale","_any_vscale","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_iiiiii=["0","_avcodec_default_execute2","_pix_abs16_c","_pix_abs16_x2_c","_pix_abs16_y2_c","_pix_abs16_xy2_c","_pix_abs8_c","_pix_abs8_x2_c","_pix_abs8_y2_c","_pix_abs8_xy2_c","_hadamard8_diff16_c","_hadamard8_diff8x8_c","_hadamard8_intra16_c","_hadamard8_intra8x8_c","_dct_sad16_c","_dct_sad8x8_c","_dct_max16_c","_dct_max8x8_c","_dct264_sad16_c","_dct264_sad8x8_c","_sse16_c","_sse8_c","_sse4_c","_quant_psnr16_c","_quant_psnr8x8_c","_rd16_c","_rd8x8_c","_bit16_c","_bit8x8_c","_vsad16_c","_vsad8_c","_vsad_intra16_c","_vsad_intra8_c","_vsse16_c","_vsse8_c","_vsse_intra16_c","_vsse_intra8_c","_nsse16_c","_nsse8_c","_pix_median_abs16_c","_pix_median_abs8_c","_resample_common_int16","_resample_linear_int16","_resample_common_int32","_resample_linear_int32","_resample_common_float","_resample_linear_float","_resample_common_double","_resample_linear_double","_sbr_lf_gen","_io_open_default","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_iiiiiii=["0","_multiple_resample","_invert_initial_buffer","_ff_aac_ac3_parse","_h263_parse","_mpeg4video_parse","_mpegaudio_parse","_parse","_avcodec_default_execute","_sbr_x_gen","0","0","0","0","0","0"];var debug_table_iiiiiiidiiddii=["0","_resample_init"];var debug_table_iiiiiiii=["0","_ff_sws_alphablendaway","_planarToP01xWrapper","_planar8ToP01xleWrapper","_yvu9ToYv12Wrapper","_bgr24ToYv12Wrapper","_rgbToRgbWrapper","_planarRgbToplanarRgbWrapper","_planarRgbToRgbWrapper","_Rgb16ToPlanarRgb16Wrapper","_planarRgb16ToRgb16Wrapper","_rgbToPlanarRgbWrapper","_bayer_to_rgb24_wrapper","_bayer_to_yv12_wrapper","_packed_16bpc_bswap","_palToRgbWrapper","_yuv422pToYuy2Wrapper","_yuv422pToUyvyWrapper","_uint_y_to_float_y_wrapper","_float_y_to_uint_y_wrapper","_planarToYuy2Wrapper","_planarToUyvyWrapper","_yuyvToYuv420Wrapper","_uyvyToYuv420Wrapper","_yuyvToYuv422Wrapper","_uyvyToYuv422Wrapper","_packedCopyWrapper","_planarCopyWrapper","_planarToNv12Wrapper","_nv12ToPlanarWrapper","_swscale","_yuva2rgba_c","_yuv2rgb_c_32","_yuv2rgb_c_bgr48","_yuv2rgb_c_48","_yuva2argb_c","_yuv2rgb_c_24_rgb","_yuv2rgb_c_24_bgr","_yuv2rgb_c_16_ordered_dither","_yuv2rgb_c_15_ordered_dither","_yuv2rgb_c_12_ordered_dither","_yuv2rgb_c_8_ordered_dither","_yuv2rgb_c_4_ordered_dither","_yuv2rgb_c_4b_ordered_dither","_yuv2rgb_c_1_ordered_dither","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_iiiiiiiiiiiiiifii=["0","_pvq_encode_band","_pvq_decode_band","0"];var debug_table_iiiiij=["0"];var debug_table_iiiji=["0","_ogg_read_seek","_flv_read_seek","_avi_read_seek","_img_read_seek","_matroska_read_seek","_mov_read_seek","_mp3_seek"];var debug_table_iiijjji=["0"];var debug_table_ijiii=["0","_ac3_sync"];var debug_table_jii=["0","_get_out_samples"];var debug_table_jiiij=["0","_ogg_read_timestamp","_mpegps_read_dts","0"];var debug_table_jiiji=["0","_daala_gptopts","_dirac_gptopts","_theora_gptopts","_vp8_gptopts","_old_dirac_gptopts","_io_read_seek","0"];var debug_table_jij=["0","_get_delay"];var debug_table_jiji=["0","_seek","_dyn_buf_seek","_io_seek"];var debug_table_v=["0","_init_ff_cos_tabs_16","_init_ff_cos_tabs_32","_init_ff_cos_tabs_64","_init_ff_cos_tabs_128","_init_ff_cos_tabs_256","_init_ff_cos_tabs_512","_init_ff_cos_tabs_1024","_init_ff_cos_tabs_2048","_init_ff_cos_tabs_4096","_init_ff_cos_tabs_8192","_init_ff_cos_tabs_16384","_init_ff_cos_tabs_32768","_init_ff_cos_tabs_65536","_init_ff_cos_tabs_131072","0"];var debug_table_vi=["0","_ff_mpeg_flush","_flush_dpb","_hevc_decode_flush","_decode_flush","_flush","_vp3_decode_flush","_vp8_decode_flush","_vp9_decode_flush","_flush_7339","_flush_5370","_opus_decode_flush","_vorbis_decode_flush","_ff_ass_decoder_flush","_fft4","_fft8","_fft16","_fft32","_fft64","_fft128","_fft256","_fft512","_fft1024","_fft2048","_fft4096","_fft8192","_fft16384","_fft32768","_fft65536","_fft131072","_resample_free","_ff_parse_close","_free_geobtag","_free_apic","_free_chapter","_free_priv","_vp9_superframe_split_uninit","_vp9_superframe_split_flush","_clear_block_c","_clear_blocks_c","_ff_simple_idct_int16_10bit","_ff_j_rev_dct4","_ff_j_rev_dct2","_ff_j_rev_dct1","_ff_simple_idct_int16_12bit","_ff_j_rev_dct","_ff_faanidct","_ff_simple_idct_int16_8bit","_ff_xvid_idct","_sbr_sum64x5_c","_sbr_neg_odd_64_c","_sbr_qmf_pre_shuffle_c","_transform_4x4_luma_9","_idct_4x4_dc_9","_idct_8x8_dc_9","_idct_16x16_dc_9","_idct_32x32_dc_9","_transform_4x4_luma_10","_idct_4x4_dc_10","_idct_8x8_dc_10","_idct_16x16_dc_10","_idct_32x32_dc_10","_transform_4x4_luma_12","_idct_4x4_dc_12","_idct_8x8_dc_12","_idct_16x16_dc_12","_idct_32x32_dc_12","_transform_4x4_luma_8","_idct_4x4_dc_8","_idct_8x8_dc_8","_idct_16x16_dc_8","_idct_32x32_dc_8","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_vii=["0","_vorbis_cleanup","_sha1_transform","_sha256_transform","_av_buffer_default_free","_pool_release_buffer","_decode_data_free","_fft_permute_c","_fft_calc_c","_ff_dct32_fixed","_ff_dct32_float","_dct32_func","_dct_calc_I_c","_dct_calc_II_c","_dct_calc_III_c","_dst_calc_I_c","_rdft_calc_c","_imdct_and_windowing","_apply_ltp","_update_ltp","_imdct_and_windowing_ld","_imdct_and_windowing_eld","_imdct_and_windowing_960","_sbr_qmf_post_shuffle_c","_sbr_qmf_deint_neg_c","_sbr_autocorrelate_c","_pred8x16_vertical_9_c","_pred8x8_vertical_9_c","_pred8x16_horizontal_9_c","_pred8x8_horizontal_9_c","_pred8x8_plane_9_c","_pred8x16_plane_9_c","_pred8x8_tm_vp8_c","_pred8x8_dc_9_c","_pred8x8_left_dc_9_c","_pred8x8_top_dc_9_c","_pred8x8_mad_cow_dc_l0t_9","_pred8x8_mad_cow_dc_0lt_9","_pred8x8_mad_cow_dc_l00_9","_pred8x8_mad_cow_dc_0l0_9","_pred8x16_dc_9_c","_pred8x16_left_dc_9_c","_pred8x16_top_dc_9_c","_pred8x16_mad_cow_dc_l0t_9","_pred8x16_mad_cow_dc_0lt_9","_pred8x16_mad_cow_dc_l00_9","_pred8x16_mad_cow_dc_0l0_9","_pred8x8_dc_rv40_c","_pred8x8_left_dc_rv40_c","_pred8x8_top_dc_rv40_c","_pred8x8_127_dc_9_c","_pred8x8_129_dc_9_c","_pred8x16_128_dc_9_c","_pred8x8_128_dc_9_c","_pred16x16_dc_9_c","_pred16x16_vertical_9_c","_pred16x16_horizontal_9_c","_pred16x16_plane_svq3_c","_pred16x16_plane_rv40_c","_pred16x16_tm_vp8_c","_pred16x16_127_dc_9_c","_pred16x16_129_dc_9_c","_pred16x16_plane_9_c","_pred16x16_left_dc_9_c","_pred16x16_top_dc_9_c","_pred16x16_128_dc_9_c","_pred8x16_vertical_10_c","_pred8x8_vertical_10_c","_pred8x16_horizontal_10_c","_pred8x8_horizontal_10_c","_pred8x8_plane_10_c","_pred8x16_plane_10_c","_pred8x8_dc_10_c","_pred8x8_left_dc_10_c","_pred8x8_top_dc_10_c","_pred8x8_mad_cow_dc_l0t_10","_pred8x8_mad_cow_dc_0lt_10","_pred8x8_mad_cow_dc_l00_10","_pred8x8_mad_cow_dc_0l0_10","_pred8x16_dc_10_c","_pred8x16_left_dc_10_c","_pred8x16_top_dc_10_c","_pred8x16_mad_cow_dc_l0t_10","_pred8x16_mad_cow_dc_0lt_10","_pred8x16_mad_cow_dc_l00_10","_pred8x16_mad_cow_dc_0l0_10","_pred8x8_127_dc_10_c","_pred8x8_129_dc_10_c","_pred8x16_128_dc_10_c","_pred8x8_128_dc_10_c","_pred16x16_dc_10_c","_pred16x16_vertical_10_c","_pred16x16_horizontal_10_c","_pred16x16_127_dc_10_c","_pred16x16_129_dc_10_c","_pred16x16_plane_10_c","_pred16x16_left_dc_10_c","_pred16x16_top_dc_10_c","_pred16x16_128_dc_10_c","_pred8x16_vertical_12_c","_pred8x8_vertical_12_c","_pred8x16_horizontal_12_c","_pred8x8_horizontal_12_c","_pred8x8_plane_12_c","_pred8x16_plane_12_c","_pred8x8_dc_12_c","_pred8x8_left_dc_12_c","_pred8x8_top_dc_12_c","_pred8x8_mad_cow_dc_l0t_12","_pred8x8_mad_cow_dc_0lt_12","_pred8x8_mad_cow_dc_l00_12","_pred8x8_mad_cow_dc_0l0_12","_pred8x16_dc_12_c","_pred8x16_left_dc_12_c","_pred8x16_top_dc_12_c","_pred8x16_mad_cow_dc_l0t_12","_pred8x16_mad_cow_dc_0lt_12","_pred8x16_mad_cow_dc_l00_12","_pred8x16_mad_cow_dc_0l0_12","_pred8x8_127_dc_12_c","_pred8x8_129_dc_12_c","_pred8x16_128_dc_12_c","_pred8x8_128_dc_12_c","_pred16x16_dc_12_c","_pred16x16_vertical_12_c","_pred16x16_horizontal_12_c","_pred16x16_127_dc_12_c","_pred16x16_129_dc_12_c","_pred16x16_plane_12_c","_pred16x16_left_dc_12_c","_pred16x16_top_dc_12_c","_pred16x16_128_dc_12_c","_pred8x16_vertical_14_c","_pred8x8_vertical_14_c","_pred8x16_horizontal_14_c","_pred8x8_horizontal_14_c","_pred8x8_plane_14_c","_pred8x16_plane_14_c","_pred8x8_dc_14_c","_pred8x8_left_dc_14_c","_pred8x8_top_dc_14_c","_pred8x8_mad_cow_dc_l0t_14","_pred8x8_mad_cow_dc_0lt_14","_pred8x8_mad_cow_dc_l00_14","_pred8x8_mad_cow_dc_0l0_14","_pred8x16_dc_14_c","_pred8x16_left_dc_14_c","_pred8x16_top_dc_14_c","_pred8x16_mad_cow_dc_l0t_14","_pred8x16_mad_cow_dc_0lt_14","_pred8x16_mad_cow_dc_l00_14","_pred8x16_mad_cow_dc_0l0_14","_pred8x8_127_dc_14_c","_pred8x8_129_dc_14_c","_pred8x16_128_dc_14_c","_pred8x8_128_dc_14_c","_pred16x16_dc_14_c","_pred16x16_vertical_14_c","_pred16x16_horizontal_14_c","_pred16x16_127_dc_14_c","_pred16x16_129_dc_14_c","_pred16x16_plane_14_c","_pred16x16_left_dc_14_c","_pred16x16_top_dc_14_c","_pred16x16_128_dc_14_c","_pred8x16_vertical_8_c","_pred8x8_vertical_8_c","_pred8x16_horizontal_8_c","_pred8x8_horizontal_8_c","_pred8x8_plane_8_c","_pred8x16_plane_8_c","_pred8x8_dc_8_c","_pred8x8_left_dc_8_c","_pred8x8_top_dc_8_c","_pred8x8_mad_cow_dc_l0t_8","_pred8x8_mad_cow_dc_0lt_8","_pred8x8_mad_cow_dc_l00_8","_pred8x8_mad_cow_dc_0l0_8","_pred8x16_dc_8_c","_pred8x16_left_dc_8_c","_pred8x16_top_dc_8_c","_pred8x16_mad_cow_dc_l0t_8","_pred8x16_mad_cow_dc_0lt_8","_pred8x16_mad_cow_dc_l00_8","_pred8x16_mad_cow_dc_0l0_8","_pred8x8_127_dc_8_c","_pred8x8_129_dc_8_c","_pred8x16_128_dc_8_c","_pred8x8_128_dc_8_c","_pred16x16_dc_8_c","_pred16x16_vertical_8_c","_pred16x16_horizontal_8_c","_pred16x16_127_dc_8_c","_pred16x16_129_dc_8_c","_pred16x16_plane_8_c","_pred16x16_left_dc_8_c","_pred16x16_top_dc_8_c","_pred16x16_128_dc_8_c","_vp8_luma_dc_wht_c","_vp8_luma_dc_wht_dc_c","_hevc_pps_free","_dequant_9","_idct_4x4_9","_idct_8x8_9","_idct_16x16_9","_idct_32x32_9","_dequant_10","_idct_4x4_10","_idct_8x8_10","_idct_16x16_10","_idct_32x32_10","_dequant_12","_idct_4x4_12","_idct_8x8_12","_idct_16x16_12","_idct_32x32_12","_dequant_8","_idct_4x4_8","_idct_8x8_8","_idct_16x16_8","_idct_32x32_8","_ff_h264_chroma422_dc_dequant_idct_9_c","_ff_h264_chroma_dc_dequant_idct_9_c","_ff_h264_chroma422_dc_dequant_idct_10_c","_ff_h264_chroma_dc_dequant_idct_10_c","_ff_h264_chroma422_dc_dequant_idct_12_c","_ff_h264_chroma_dc_dequant_idct_12_c","_ff_h264_chroma422_dc_dequant_idct_14_c","_ff_h264_chroma_dc_dequant_idct_14_c","_ff_h264_chroma422_dc_dequant_idct_8_c","_ff_h264_chroma_dc_dequant_idct_8_c","_io_close_default","_lumRangeFromJpeg_c","_lumRangeToJpeg_c","_lumRangeFromJpeg16_c","_lumRangeToJpeg16_c","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viidi=["0","_vector_dmac_scalar_c","_vector_dmul_scalar_c","0"];var debug_table_viifi=["0","_vector_fmac_scalar_c","_vector_fmul_scalar_c","_int32_to_float_fmul_scalar_c"];var debug_table_viii=["0","_ff_put_qpel16_mc11_old_c","_ff_put_no_rnd_qpel16_mc11_old_c","_ff_avg_qpel16_mc11_old_c","_ff_put_qpel16_mc31_old_c","_ff_put_no_rnd_qpel16_mc31_old_c","_ff_avg_qpel16_mc31_old_c","_ff_put_qpel16_mc12_old_c","_ff_put_no_rnd_qpel16_mc12_old_c","_ff_avg_qpel16_mc12_old_c","_ff_put_qpel16_mc32_old_c","_ff_put_no_rnd_qpel16_mc32_old_c","_ff_avg_qpel16_mc32_old_c","_ff_put_qpel16_mc13_old_c","_ff_put_no_rnd_qpel16_mc13_old_c","_ff_avg_qpel16_mc13_old_c","_ff_put_qpel16_mc33_old_c","_ff_put_no_rnd_qpel16_mc33_old_c","_ff_avg_qpel16_mc33_old_c","_ff_put_qpel8_mc11_old_c","_ff_put_no_rnd_qpel8_mc11_old_c","_ff_avg_qpel8_mc11_old_c","_ff_put_qpel8_mc31_old_c","_ff_put_no_rnd_qpel8_mc31_old_c","_ff_avg_qpel8_mc31_old_c","_ff_put_qpel8_mc12_old_c","_ff_put_no_rnd_qpel8_mc12_old_c","_ff_avg_qpel8_mc12_old_c","_ff_put_qpel8_mc32_old_c","_ff_put_no_rnd_qpel8_mc32_old_c","_ff_avg_qpel8_mc32_old_c","_ff_put_qpel8_mc13_old_c","_ff_put_no_rnd_qpel8_mc13_old_c","_ff_avg_qpel8_mc13_old_c","_ff_put_qpel8_mc33_old_c","_ff_put_no_rnd_qpel8_mc33_old_c","_ff_avg_qpel8_mc33_old_c","_just_return","_ff_jref_idct4_put","_ff_jref_idct2_put","_ff_jref_idct1_put","_ff_simple_idct_put_int32_10bit","_ff_simple_idct_put_int16_10bit","_ff_simple_idct_add_int16_10bit","_ff_simple_idct_put_int16_12bit","_ff_jref_idct_put","_ff_faanidct_put","_ff_simple_idct_put_int16_8bit","_ff_put_pixels_clamped_c","_put_signed_pixels_clamped_c","_ff_add_pixels_clamped_c","_ff_jref_idct4_add","_ff_jref_idct2_add","_ff_jref_idct1_add","_ff_simple_idct_add_int16_12bit","_ff_jref_idct_add","_ff_faanidct_add","_ff_simple_idct_add_int16_8bit","_xvid_idct_put","_xvid_idct_add","_h263_h_loop_filter_c","_h263_v_loop_filter_c","_ff_put_pixels16x16_c","_put_qpel16_mc10_c","_put_qpel16_mc20_c","_put_qpel16_mc30_c","_put_qpel16_mc01_c","_put_qpel16_mc11_c","_put_qpel16_mc21_c","_put_qpel16_mc31_c","_put_qpel16_mc02_c","_put_qpel16_mc12_c","_put_qpel16_mc22_c","_put_qpel16_mc32_c","_put_qpel16_mc03_c","_put_qpel16_mc13_c","_put_qpel16_mc23_c","_put_qpel16_mc33_c","_ff_put_pixels8x8_c","_put_qpel8_mc10_c","_put_qpel8_mc20_c","_put_qpel8_mc30_c","_put_qpel8_mc01_c","_put_qpel8_mc11_c","_put_qpel8_mc21_c","_put_qpel8_mc31_c","_put_qpel8_mc02_c","_put_qpel8_mc12_c","_put_qpel8_mc22_c","_put_qpel8_mc32_c","_put_qpel8_mc03_c","_put_qpel8_mc13_c","_put_qpel8_mc23_c","_put_qpel8_mc33_c","_put_no_rnd_qpel16_mc10_c","_put_no_rnd_qpel16_mc20_c","_put_no_rnd_qpel16_mc30_c","_put_no_rnd_qpel16_mc01_c","_put_no_rnd_qpel16_mc11_c","_put_no_rnd_qpel16_mc21_c","_put_no_rnd_qpel16_mc31_c","_put_no_rnd_qpel16_mc02_c","_put_no_rnd_qpel16_mc12_c","_put_no_rnd_qpel16_mc22_c","_put_no_rnd_qpel16_mc32_c","_put_no_rnd_qpel16_mc03_c","_put_no_rnd_qpel16_mc13_c","_put_no_rnd_qpel16_mc23_c","_put_no_rnd_qpel16_mc33_c","_put_no_rnd_qpel8_mc10_c","_put_no_rnd_qpel8_mc20_c","_put_no_rnd_qpel8_mc30_c","_put_no_rnd_qpel8_mc01_c","_put_no_rnd_qpel8_mc11_c","_put_no_rnd_qpel8_mc21_c","_put_no_rnd_qpel8_mc31_c","_put_no_rnd_qpel8_mc02_c","_put_no_rnd_qpel8_mc12_c","_put_no_rnd_qpel8_mc22_c","_put_no_rnd_qpel8_mc32_c","_put_no_rnd_qpel8_mc03_c","_put_no_rnd_qpel8_mc13_c","_put_no_rnd_qpel8_mc23_c","_put_no_rnd_qpel8_mc33_c","_ff_avg_pixels16x16_c","_avg_qpel16_mc10_c","_avg_qpel16_mc20_c","_avg_qpel16_mc30_c","_avg_qpel16_mc01_c","_avg_qpel16_mc11_c","_avg_qpel16_mc21_c","_avg_qpel16_mc31_c","_avg_qpel16_mc02_c","_avg_qpel16_mc12_c","_avg_qpel16_mc22_c","_avg_qpel16_mc32_c","_avg_qpel16_mc03_c","_avg_qpel16_mc13_c","_avg_qpel16_mc23_c","_avg_qpel16_mc33_c","_ff_avg_pixels8x8_c","_avg_qpel8_mc10_c","_avg_qpel8_mc20_c","_avg_qpel8_mc30_c","_avg_qpel8_mc01_c","_avg_qpel8_mc11_c","_avg_qpel8_mc21_c","_avg_qpel8_mc31_c","_avg_qpel8_mc02_c","_avg_qpel8_mc12_c","_avg_qpel8_mc22_c","_avg_qpel8_mc32_c","_avg_qpel8_mc03_c","_avg_qpel8_mc13_c","_avg_qpel8_mc23_c","_avg_qpel8_mc33_c","_butterflies_float_c","_ff_imdct_calc_c","_ff_imdct_half_c","_ff_mdct_calc_c","_ff_vorbis_inverse_coupling","_cpy1","_cpy2","_cpy4","_cpy8","_ac3_downmix_5_to_2_symmetric_c","_ac3_downmix_5_to_1_symmetric_c","_bswap_buf","_bswap16_buf","_int32_to_float_c","_ac3_exponent_min_c","_ac3_lshift_int16_c","_ac3_rshift_int32_c","_float_to_fixed24_c","_ac3_update_bap_counts_c","_ac3_extract_exponents_c","_sbr_qmf_deint_bfly_c","_ps_add_squares_c","_pred4x4_dc_9_c","_pred4x4_down_left_9_c","_pred4x4_down_left_svq3_c","_pred4x4_down_right_9_c","_pred4x4_vertical_right_9_c","_pred4x4_horizontal_down_9_c","_pred4x4_vertical_left_9_c","_pred4x4_vertical_left_vp8_c","_pred4x4_horizontal_up_9_c","_pred4x4_left_dc_9_c","_pred4x4_top_dc_9_c","_pred4x4_tm_vp8_c","_pred4x4_127_dc_9_c","_pred4x4_129_dc_9_c","_pred4x4_vertical_9_c","_pred4x4_horizontal_9_c","_pred4x4_128_dc_9_c","_pred4x4_down_left_rv40_c","_pred4x4_vertical_left_rv40_c","_pred4x4_horizontal_up_rv40_c","_pred4x4_down_left_rv40_nodown_c","_pred4x4_horizontal_up_rv40_nodown_c","_pred4x4_vertical_left_rv40_nodown_c","_pred4x4_vertical_add_9_c","_pred4x4_horizontal_add_9_c","_pred8x8l_vertical_add_9_c","_pred8x8l_horizontal_add_9_c","_pred4x4_dc_10_c","_pred4x4_down_left_10_c","_pred4x4_down_right_10_c","_pred4x4_vertical_right_10_c","_pred4x4_horizontal_down_10_c","_pred4x4_vertical_left_10_c","_pred4x4_horizontal_up_10_c","_pred4x4_left_dc_10_c","_pred4x4_top_dc_10_c","_pred4x4_127_dc_10_c","_pred4x4_129_dc_10_c","_pred4x4_vertical_10_c","_pred4x4_horizontal_10_c","_pred4x4_128_dc_10_c","_pred4x4_vertical_add_10_c","_pred4x4_horizontal_add_10_c","_pred8x8l_vertical_add_10_c","_pred8x8l_horizontal_add_10_c","_pred4x4_dc_12_c","_pred4x4_down_left_12_c","_pred4x4_down_right_12_c","_pred4x4_vertical_right_12_c","_pred4x4_horizontal_down_12_c","_pred4x4_vertical_left_12_c","_pred4x4_horizontal_up_12_c","_pred4x4_left_dc_12_c","_pred4x4_top_dc_12_c","_pred4x4_127_dc_12_c","_pred4x4_129_dc_12_c","_pred4x4_vertical_12_c","_pred4x4_horizontal_12_c","_pred4x4_128_dc_12_c","_pred4x4_vertical_add_12_c","_pred4x4_horizontal_add_12_c","_pred8x8l_vertical_add_12_c","_pred8x8l_horizontal_add_12_c","_pred4x4_dc_14_c","_pred4x4_down_left_14_c","_pred4x4_down_right_14_c","_pred4x4_vertical_right_14_c","_pred4x4_horizontal_down_14_c","_pred4x4_vertical_left_14_c","_pred4x4_horizontal_up_14_c","_pred4x4_left_dc_14_c","_pred4x4_top_dc_14_c","_pred4x4_127_dc_14_c","_pred4x4_129_dc_14_c","_pred4x4_vertical_14_c","_pred4x4_horizontal_14_c","_pred4x4_128_dc_14_c","_pred4x4_vertical_add_14_c","_pred4x4_horizontal_add_14_c","_pred8x8l_vertical_add_14_c","_pred8x8l_horizontal_add_14_c","_pred4x4_dc_8_c","_pred4x4_down_left_8_c","_pred4x4_down_right_8_c","_pred4x4_vertical_right_8_c","_pred4x4_horizontal_down_8_c","_pred4x4_vertical_left_8_c","_pred4x4_horizontal_up_8_c","_pred4x4_left_dc_8_c","_pred4x4_top_dc_8_c","_pred4x4_127_dc_8_c","_pred4x4_129_dc_8_c","_pred4x4_vertical_8_c","_pred4x4_horizontal_8_c","_pred4x4_128_dc_8_c","_pred4x4_vertical_add_8_c","_pred4x4_horizontal_add_8_c","_pred8x8l_vertical_add_8_c","_pred8x8l_horizontal_add_8_c","_pred4x4_vertical_vp8_c","_pred4x4_horizontal_vp8_c","_vp8_idct_add_c","_vp8_idct_dc_add_c","_vp8_idct_dc_add4y_c","_vp8_idct_dc_add4uv_c","_vp8_v_loop_filter_simple_c","_vp8_h_loop_filter_simple_c","_vp3_idct_put_c","_vp3_idct_add_c","_vp3_idct_dc_add_c","_vp3_v_loop_filter_c","_vp3_h_loop_filter_c","_add_residual4x4_9","_add_residual8x8_9","_add_residual16x16_9","_add_residual32x32_9","_transform_rdpcm_9","_add_residual4x4_10","_add_residual8x8_10","_add_residual16x16_10","_add_residual32x32_10","_transform_rdpcm_10","_add_residual4x4_12","_add_residual8x8_12","_add_residual16x16_12","_add_residual32x32_12","_transform_rdpcm_12","_add_residual4x4_8","_add_residual8x8_8","_add_residual16x16_8","_add_residual32x32_8","_transform_rdpcm_8","_ff_h264_add_pixels4_8_c","_ff_h264_add_pixels4_16_c","_ff_h264_add_pixels8_8_c","_ff_h264_add_pixels8_16_c","_ff_h264_idct_add_9_c","_ff_h264_idct8_add_9_c","_ff_h264_idct_dc_add_9_c","_ff_h264_idct8_dc_add_9_c","_ff_h264_luma_dc_dequant_idct_9_c","_ff_h264_idct_add_10_c","_ff_h264_idct8_add_10_c","_ff_h264_idct_dc_add_10_c","_ff_h264_idct8_dc_add_10_c","_ff_h264_luma_dc_dequant_idct_10_c","_ff_h264_idct_add_12_c","_ff_h264_idct8_add_12_c","_ff_h264_idct_dc_add_12_c","_ff_h264_idct8_dc_add_12_c","_ff_h264_luma_dc_dequant_idct_12_c","_ff_h264_idct_add_14_c","_ff_h264_idct8_add_14_c","_ff_h264_idct_dc_add_14_c","_ff_h264_idct8_dc_add_14_c","_ff_h264_luma_dc_dequant_idct_14_c","_ff_h264_idct_add_8_c","_ff_h264_idct8_add_8_c","_ff_h264_idct_dc_add_8_c","_ff_h264_idct8_dc_add_8_c","_ff_h264_luma_dc_dequant_idct_8_c","_put_h264_qpel16_mc00_8_c","_put_h264_qpel16_mc10_8_c","_put_h264_qpel16_mc20_8_c","_put_h264_qpel16_mc30_8_c","_put_h264_qpel16_mc01_8_c","_put_h264_qpel16_mc11_8_c","_put_h264_qpel16_mc21_8_c","_put_h264_qpel16_mc31_8_c","_put_h264_qpel16_mc02_8_c","_put_h264_qpel16_mc12_8_c","_put_h264_qpel16_mc22_8_c","_put_h264_qpel16_mc32_8_c","_put_h264_qpel16_mc03_8_c","_put_h264_qpel16_mc13_8_c","_put_h264_qpel16_mc23_8_c","_put_h264_qpel16_mc33_8_c","_put_h264_qpel8_mc00_8_c","_put_h264_qpel8_mc10_8_c","_put_h264_qpel8_mc20_8_c","_put_h264_qpel8_mc30_8_c","_put_h264_qpel8_mc01_8_c","_put_h264_qpel8_mc11_8_c","_put_h264_qpel8_mc21_8_c","_put_h264_qpel8_mc31_8_c","_put_h264_qpel8_mc02_8_c","_put_h264_qpel8_mc12_8_c","_put_h264_qpel8_mc22_8_c","_put_h264_qpel8_mc32_8_c","_put_h264_qpel8_mc03_8_c","_put_h264_qpel8_mc13_8_c","_put_h264_qpel8_mc23_8_c","_put_h264_qpel8_mc33_8_c","_put_h264_qpel4_mc00_8_c","_put_h264_qpel4_mc10_8_c","_put_h264_qpel4_mc20_8_c","_put_h264_qpel4_mc30_8_c","_put_h264_qpel4_mc01_8_c","_put_h264_qpel4_mc11_8_c","_put_h264_qpel4_mc21_8_c","_put_h264_qpel4_mc31_8_c","_put_h264_qpel4_mc02_8_c","_put_h264_qpel4_mc12_8_c","_put_h264_qpel4_mc22_8_c","_put_h264_qpel4_mc32_8_c","_put_h264_qpel4_mc03_8_c","_put_h264_qpel4_mc13_8_c","_put_h264_qpel4_mc23_8_c","_put_h264_qpel4_mc33_8_c","_put_h264_qpel2_mc00_8_c","_put_h264_qpel2_mc10_8_c","_put_h264_qpel2_mc20_8_c","_put_h264_qpel2_mc30_8_c","_put_h264_qpel2_mc01_8_c","_put_h264_qpel2_mc11_8_c","_put_h264_qpel2_mc21_8_c","_put_h264_qpel2_mc31_8_c","_put_h264_qpel2_mc02_8_c","_put_h264_qpel2_mc12_8_c","_put_h264_qpel2_mc22_8_c","_put_h264_qpel2_mc32_8_c","_put_h264_qpel2_mc03_8_c","_put_h264_qpel2_mc13_8_c","_put_h264_qpel2_mc23_8_c","_put_h264_qpel2_mc33_8_c","_avg_h264_qpel16_mc00_8_c","_avg_h264_qpel16_mc10_8_c","_avg_h264_qpel16_mc20_8_c","_avg_h264_qpel16_mc30_8_c","_avg_h264_qpel16_mc01_8_c","_avg_h264_qpel16_mc11_8_c","_avg_h264_qpel16_mc21_8_c","_avg_h264_qpel16_mc31_8_c","_avg_h264_qpel16_mc02_8_c","_avg_h264_qpel16_mc12_8_c","_avg_h264_qpel16_mc22_8_c","_avg_h264_qpel16_mc32_8_c","_avg_h264_qpel16_mc03_8_c","_avg_h264_qpel16_mc13_8_c","_avg_h264_qpel16_mc23_8_c","_avg_h264_qpel16_mc33_8_c","_avg_h264_qpel8_mc00_8_c","_avg_h264_qpel8_mc10_8_c","_avg_h264_qpel8_mc20_8_c","_avg_h264_qpel8_mc30_8_c","_avg_h264_qpel8_mc01_8_c","_avg_h264_qpel8_mc11_8_c","_avg_h264_qpel8_mc21_8_c","_avg_h264_qpel8_mc31_8_c","_avg_h264_qpel8_mc02_8_c","_avg_h264_qpel8_mc12_8_c","_avg_h264_qpel8_mc22_8_c","_avg_h264_qpel8_mc32_8_c","_avg_h264_qpel8_mc03_8_c","_avg_h264_qpel8_mc13_8_c","_avg_h264_qpel8_mc23_8_c","_avg_h264_qpel8_mc33_8_c","_avg_h264_qpel4_mc00_8_c","_avg_h264_qpel4_mc10_8_c","_avg_h264_qpel4_mc20_8_c","_avg_h264_qpel4_mc30_8_c","_avg_h264_qpel4_mc01_8_c","_avg_h264_qpel4_mc11_8_c","_avg_h264_qpel4_mc21_8_c","_avg_h264_qpel4_mc31_8_c","_avg_h264_qpel4_mc02_8_c","_avg_h264_qpel4_mc12_8_c","_avg_h264_qpel4_mc22_8_c","_avg_h264_qpel4_mc32_8_c","_avg_h264_qpel4_mc03_8_c","_avg_h264_qpel4_mc13_8_c","_avg_h264_qpel4_mc23_8_c","_avg_h264_qpel4_mc33_8_c","_put_h264_qpel16_mc00_9_c","_put_h264_qpel16_mc10_9_c","_put_h264_qpel16_mc20_9_c","_put_h264_qpel16_mc30_9_c","_put_h264_qpel16_mc01_9_c","_put_h264_qpel16_mc11_9_c","_put_h264_qpel16_mc21_9_c","_put_h264_qpel16_mc31_9_c","_put_h264_qpel16_mc02_9_c","_put_h264_qpel16_mc12_9_c","_put_h264_qpel16_mc22_9_c","_put_h264_qpel16_mc32_9_c","_put_h264_qpel16_mc03_9_c","_put_h264_qpel16_mc13_9_c","_put_h264_qpel16_mc23_9_c","_put_h264_qpel16_mc33_9_c","_put_h264_qpel8_mc00_9_c","_put_h264_qpel8_mc10_9_c","_put_h264_qpel8_mc20_9_c","_put_h264_qpel8_mc30_9_c","_put_h264_qpel8_mc01_9_c","_put_h264_qpel8_mc11_9_c","_put_h264_qpel8_mc21_9_c","_put_h264_qpel8_mc31_9_c","_put_h264_qpel8_mc02_9_c","_put_h264_qpel8_mc12_9_c","_put_h264_qpel8_mc22_9_c","_put_h264_qpel8_mc32_9_c","_put_h264_qpel8_mc03_9_c","_put_h264_qpel8_mc13_9_c","_put_h264_qpel8_mc23_9_c","_put_h264_qpel8_mc33_9_c","_put_h264_qpel4_mc00_9_c","_put_h264_qpel4_mc10_9_c","_put_h264_qpel4_mc20_9_c","_put_h264_qpel4_mc30_9_c","_put_h264_qpel4_mc01_9_c","_put_h264_qpel4_mc11_9_c","_put_h264_qpel4_mc21_9_c","_put_h264_qpel4_mc31_9_c","_put_h264_qpel4_mc02_9_c","_put_h264_qpel4_mc12_9_c","_put_h264_qpel4_mc22_9_c","_put_h264_qpel4_mc32_9_c","_put_h264_qpel4_mc03_9_c","_put_h264_qpel4_mc13_9_c","_put_h264_qpel4_mc23_9_c","_put_h264_qpel4_mc33_9_c","_put_h264_qpel2_mc00_9_c","_put_h264_qpel2_mc10_9_c","_put_h264_qpel2_mc20_9_c","_put_h264_qpel2_mc30_9_c","_put_h264_qpel2_mc01_9_c","_put_h264_qpel2_mc11_9_c","_put_h264_qpel2_mc21_9_c","_put_h264_qpel2_mc31_9_c","_put_h264_qpel2_mc02_9_c","_put_h264_qpel2_mc12_9_c","_put_h264_qpel2_mc22_9_c","_put_h264_qpel2_mc32_9_c","_put_h264_qpel2_mc03_9_c","_put_h264_qpel2_mc13_9_c","_put_h264_qpel2_mc23_9_c","_put_h264_qpel2_mc33_9_c","_avg_h264_qpel16_mc00_9_c","_avg_h264_qpel16_mc10_9_c","_avg_h264_qpel16_mc20_9_c","_avg_h264_qpel16_mc30_9_c","_avg_h264_qpel16_mc01_9_c","_avg_h264_qpel16_mc11_9_c","_avg_h264_qpel16_mc21_9_c","_avg_h264_qpel16_mc31_9_c","_avg_h264_qpel16_mc02_9_c","_avg_h264_qpel16_mc12_9_c","_avg_h264_qpel16_mc22_9_c","_avg_h264_qpel16_mc32_9_c","_avg_h264_qpel16_mc03_9_c","_avg_h264_qpel16_mc13_9_c","_avg_h264_qpel16_mc23_9_c","_avg_h264_qpel16_mc33_9_c","_avg_h264_qpel8_mc00_9_c","_avg_h264_qpel8_mc10_9_c","_avg_h264_qpel8_mc20_9_c","_avg_h264_qpel8_mc30_9_c","_avg_h264_qpel8_mc01_9_c","_avg_h264_qpel8_mc11_9_c","_avg_h264_qpel8_mc21_9_c","_avg_h264_qpel8_mc31_9_c","_avg_h264_qpel8_mc02_9_c","_avg_h264_qpel8_mc12_9_c","_avg_h264_qpel8_mc22_9_c","_avg_h264_qpel8_mc32_9_c","_avg_h264_qpel8_mc03_9_c","_avg_h264_qpel8_mc13_9_c","_avg_h264_qpel8_mc23_9_c","_avg_h264_qpel8_mc33_9_c","_avg_h264_qpel4_mc00_9_c","_avg_h264_qpel4_mc10_9_c","_avg_h264_qpel4_mc20_9_c","_avg_h264_qpel4_mc30_9_c","_avg_h264_qpel4_mc01_9_c","_avg_h264_qpel4_mc11_9_c","_avg_h264_qpel4_mc21_9_c","_avg_h264_qpel4_mc31_9_c","_avg_h264_qpel4_mc02_9_c","_avg_h264_qpel4_mc12_9_c","_avg_h264_qpel4_mc22_9_c","_avg_h264_qpel4_mc32_9_c","_avg_h264_qpel4_mc03_9_c","_avg_h264_qpel4_mc13_9_c","_avg_h264_qpel4_mc23_9_c","_avg_h264_qpel4_mc33_9_c","_put_h264_qpel16_mc00_10_c","_put_h264_qpel16_mc10_10_c","_put_h264_qpel16_mc20_10_c","_put_h264_qpel16_mc30_10_c","_put_h264_qpel16_mc01_10_c","_put_h264_qpel16_mc11_10_c","_put_h264_qpel16_mc21_10_c","_put_h264_qpel16_mc31_10_c","_put_h264_qpel16_mc02_10_c","_put_h264_qpel16_mc12_10_c","_put_h264_qpel16_mc22_10_c","_put_h264_qpel16_mc32_10_c","_put_h264_qpel16_mc03_10_c","_put_h264_qpel16_mc13_10_c","_put_h264_qpel16_mc23_10_c","_put_h264_qpel16_mc33_10_c","_put_h264_qpel8_mc00_10_c","_put_h264_qpel8_mc10_10_c","_put_h264_qpel8_mc20_10_c","_put_h264_qpel8_mc30_10_c","_put_h264_qpel8_mc01_10_c","_put_h264_qpel8_mc11_10_c","_put_h264_qpel8_mc21_10_c","_put_h264_qpel8_mc31_10_c","_put_h264_qpel8_mc02_10_c","_put_h264_qpel8_mc12_10_c","_put_h264_qpel8_mc22_10_c","_put_h264_qpel8_mc32_10_c","_put_h264_qpel8_mc03_10_c","_put_h264_qpel8_mc13_10_c","_put_h264_qpel8_mc23_10_c","_put_h264_qpel8_mc33_10_c","_put_h264_qpel4_mc00_10_c","_put_h264_qpel4_mc10_10_c","_put_h264_qpel4_mc20_10_c","_put_h264_qpel4_mc30_10_c","_put_h264_qpel4_mc01_10_c","_put_h264_qpel4_mc11_10_c","_put_h264_qpel4_mc21_10_c","_put_h264_qpel4_mc31_10_c","_put_h264_qpel4_mc02_10_c","_put_h264_qpel4_mc12_10_c","_put_h264_qpel4_mc22_10_c","_put_h264_qpel4_mc32_10_c","_put_h264_qpel4_mc03_10_c","_put_h264_qpel4_mc13_10_c","_put_h264_qpel4_mc23_10_c","_put_h264_qpel4_mc33_10_c","_put_h264_qpel2_mc00_10_c","_put_h264_qpel2_mc10_10_c","_put_h264_qpel2_mc20_10_c","_put_h264_qpel2_mc30_10_c","_put_h264_qpel2_mc01_10_c","_put_h264_qpel2_mc11_10_c","_put_h264_qpel2_mc21_10_c","_put_h264_qpel2_mc31_10_c","_put_h264_qpel2_mc02_10_c","_put_h264_qpel2_mc12_10_c","_put_h264_qpel2_mc22_10_c","_put_h264_qpel2_mc32_10_c","_put_h264_qpel2_mc03_10_c","_put_h264_qpel2_mc13_10_c","_put_h264_qpel2_mc23_10_c","_put_h264_qpel2_mc33_10_c","_avg_h264_qpel16_mc00_10_c","_avg_h264_qpel16_mc10_10_c","_avg_h264_qpel16_mc20_10_c","_avg_h264_qpel16_mc30_10_c","_avg_h264_qpel16_mc01_10_c","_avg_h264_qpel16_mc11_10_c","_avg_h264_qpel16_mc21_10_c","_avg_h264_qpel16_mc31_10_c","_avg_h264_qpel16_mc02_10_c","_avg_h264_qpel16_mc12_10_c","_avg_h264_qpel16_mc22_10_c","_avg_h264_qpel16_mc32_10_c","_avg_h264_qpel16_mc03_10_c","_avg_h264_qpel16_mc13_10_c","_avg_h264_qpel16_mc23_10_c","_avg_h264_qpel16_mc33_10_c","_avg_h264_qpel8_mc00_10_c","_avg_h264_qpel8_mc10_10_c","_avg_h264_qpel8_mc20_10_c","_avg_h264_qpel8_mc30_10_c","_avg_h264_qpel8_mc01_10_c","_avg_h264_qpel8_mc11_10_c","_avg_h264_qpel8_mc21_10_c","_avg_h264_qpel8_mc31_10_c","_avg_h264_qpel8_mc02_10_c","_avg_h264_qpel8_mc12_10_c","_avg_h264_qpel8_mc22_10_c","_avg_h264_qpel8_mc32_10_c","_avg_h264_qpel8_mc03_10_c","_avg_h264_qpel8_mc13_10_c","_avg_h264_qpel8_mc23_10_c","_avg_h264_qpel8_mc33_10_c","_avg_h264_qpel4_mc00_10_c","_avg_h264_qpel4_mc10_10_c","_avg_h264_qpel4_mc20_10_c","_avg_h264_qpel4_mc30_10_c","_avg_h264_qpel4_mc01_10_c","_avg_h264_qpel4_mc11_10_c","_avg_h264_qpel4_mc21_10_c","_avg_h264_qpel4_mc31_10_c","_avg_h264_qpel4_mc02_10_c","_avg_h264_qpel4_mc12_10_c","_avg_h264_qpel4_mc22_10_c","_avg_h264_qpel4_mc32_10_c","_avg_h264_qpel4_mc03_10_c","_avg_h264_qpel4_mc13_10_c","_avg_h264_qpel4_mc23_10_c","_avg_h264_qpel4_mc33_10_c","_put_h264_qpel16_mc00_12_c","_put_h264_qpel16_mc10_12_c","_put_h264_qpel16_mc20_12_c","_put_h264_qpel16_mc30_12_c","_put_h264_qpel16_mc01_12_c","_put_h264_qpel16_mc11_12_c","_put_h264_qpel16_mc21_12_c","_put_h264_qpel16_mc31_12_c","_put_h264_qpel16_mc02_12_c","_put_h264_qpel16_mc12_12_c","_put_h264_qpel16_mc22_12_c","_put_h264_qpel16_mc32_12_c","_put_h264_qpel16_mc03_12_c","_put_h264_qpel16_mc13_12_c","_put_h264_qpel16_mc23_12_c","_put_h264_qpel16_mc33_12_c","_put_h264_qpel8_mc00_12_c","_put_h264_qpel8_mc10_12_c","_put_h264_qpel8_mc20_12_c","_put_h264_qpel8_mc30_12_c","_put_h264_qpel8_mc01_12_c","_put_h264_qpel8_mc11_12_c","_put_h264_qpel8_mc21_12_c","_put_h264_qpel8_mc31_12_c","_put_h264_qpel8_mc02_12_c","_put_h264_qpel8_mc12_12_c","_put_h264_qpel8_mc22_12_c","_put_h264_qpel8_mc32_12_c","_put_h264_qpel8_mc03_12_c","_put_h264_qpel8_mc13_12_c","_put_h264_qpel8_mc23_12_c","_put_h264_qpel8_mc33_12_c","_put_h264_qpel4_mc00_12_c","_put_h264_qpel4_mc10_12_c","_put_h264_qpel4_mc20_12_c","_put_h264_qpel4_mc30_12_c","_put_h264_qpel4_mc01_12_c","_put_h264_qpel4_mc11_12_c","_put_h264_qpel4_mc21_12_c","_put_h264_qpel4_mc31_12_c","_put_h264_qpel4_mc02_12_c","_put_h264_qpel4_mc12_12_c","_put_h264_qpel4_mc22_12_c","_put_h264_qpel4_mc32_12_c","_put_h264_qpel4_mc03_12_c","_put_h264_qpel4_mc13_12_c","_put_h264_qpel4_mc23_12_c","_put_h264_qpel4_mc33_12_c","_put_h264_qpel2_mc00_12_c","_put_h264_qpel2_mc10_12_c","_put_h264_qpel2_mc20_12_c","_put_h264_qpel2_mc30_12_c","_put_h264_qpel2_mc01_12_c","_put_h264_qpel2_mc11_12_c","_put_h264_qpel2_mc21_12_c","_put_h264_qpel2_mc31_12_c","_put_h264_qpel2_mc02_12_c","_put_h264_qpel2_mc12_12_c","_put_h264_qpel2_mc22_12_c","_put_h264_qpel2_mc32_12_c","_put_h264_qpel2_mc03_12_c","_put_h264_qpel2_mc13_12_c","_put_h264_qpel2_mc23_12_c","_put_h264_qpel2_mc33_12_c","_avg_h264_qpel16_mc00_12_c","_avg_h264_qpel16_mc10_12_c","_avg_h264_qpel16_mc20_12_c","_avg_h264_qpel16_mc30_12_c","_avg_h264_qpel16_mc01_12_c","_avg_h264_qpel16_mc11_12_c","_avg_h264_qpel16_mc21_12_c","_avg_h264_qpel16_mc31_12_c","_avg_h264_qpel16_mc02_12_c","_avg_h264_qpel16_mc12_12_c","_avg_h264_qpel16_mc22_12_c","_avg_h264_qpel16_mc32_12_c","_avg_h264_qpel16_mc03_12_c","_avg_h264_qpel16_mc13_12_c","_avg_h264_qpel16_mc23_12_c","_avg_h264_qpel16_mc33_12_c","_avg_h264_qpel8_mc00_12_c","_avg_h264_qpel8_mc10_12_c","_avg_h264_qpel8_mc20_12_c","_avg_h264_qpel8_mc30_12_c","_avg_h264_qpel8_mc01_12_c","_avg_h264_qpel8_mc11_12_c","_avg_h264_qpel8_mc21_12_c","_avg_h264_qpel8_mc31_12_c","_avg_h264_qpel8_mc02_12_c","_avg_h264_qpel8_mc12_12_c","_avg_h264_qpel8_mc22_12_c","_avg_h264_qpel8_mc32_12_c","_avg_h264_qpel8_mc03_12_c","_avg_h264_qpel8_mc13_12_c","_avg_h264_qpel8_mc23_12_c","_avg_h264_qpel8_mc33_12_c","_avg_h264_qpel4_mc00_12_c","_avg_h264_qpel4_mc10_12_c","_avg_h264_qpel4_mc20_12_c","_avg_h264_qpel4_mc30_12_c","_avg_h264_qpel4_mc01_12_c","_avg_h264_qpel4_mc11_12_c","_avg_h264_qpel4_mc21_12_c","_avg_h264_qpel4_mc31_12_c","_avg_h264_qpel4_mc02_12_c","_avg_h264_qpel4_mc12_12_c","_avg_h264_qpel4_mc22_12_c","_avg_h264_qpel4_mc32_12_c","_avg_h264_qpel4_mc03_12_c","_avg_h264_qpel4_mc13_12_c","_avg_h264_qpel4_mc23_12_c","_avg_h264_qpel4_mc33_12_c","_put_h264_qpel16_mc00_14_c","_put_h264_qpel16_mc10_14_c","_put_h264_qpel16_mc20_14_c","_put_h264_qpel16_mc30_14_c","_put_h264_qpel16_mc01_14_c","_put_h264_qpel16_mc11_14_c","_put_h264_qpel16_mc21_14_c","_put_h264_qpel16_mc31_14_c","_put_h264_qpel16_mc02_14_c","_put_h264_qpel16_mc12_14_c","_put_h264_qpel16_mc22_14_c","_put_h264_qpel16_mc32_14_c","_put_h264_qpel16_mc03_14_c","_put_h264_qpel16_mc13_14_c","_put_h264_qpel16_mc23_14_c","_put_h264_qpel16_mc33_14_c","_put_h264_qpel8_mc00_14_c","_put_h264_qpel8_mc10_14_c","_put_h264_qpel8_mc20_14_c","_put_h264_qpel8_mc30_14_c","_put_h264_qpel8_mc01_14_c","_put_h264_qpel8_mc11_14_c","_put_h264_qpel8_mc21_14_c","_put_h264_qpel8_mc31_14_c","_put_h264_qpel8_mc02_14_c","_put_h264_qpel8_mc12_14_c","_put_h264_qpel8_mc22_14_c","_put_h264_qpel8_mc32_14_c","_put_h264_qpel8_mc03_14_c","_put_h264_qpel8_mc13_14_c","_put_h264_qpel8_mc23_14_c","_put_h264_qpel8_mc33_14_c","_put_h264_qpel4_mc00_14_c","_put_h264_qpel4_mc10_14_c","_put_h264_qpel4_mc20_14_c","_put_h264_qpel4_mc30_14_c","_put_h264_qpel4_mc01_14_c","_put_h264_qpel4_mc11_14_c","_put_h264_qpel4_mc21_14_c","_put_h264_qpel4_mc31_14_c","_put_h264_qpel4_mc02_14_c","_put_h264_qpel4_mc12_14_c","_put_h264_qpel4_mc22_14_c","_put_h264_qpel4_mc32_14_c","_put_h264_qpel4_mc03_14_c","_put_h264_qpel4_mc13_14_c","_put_h264_qpel4_mc23_14_c","_put_h264_qpel4_mc33_14_c","_put_h264_qpel2_mc00_14_c","_put_h264_qpel2_mc10_14_c","_put_h264_qpel2_mc20_14_c","_put_h264_qpel2_mc30_14_c","_put_h264_qpel2_mc01_14_c","_put_h264_qpel2_mc11_14_c","_put_h264_qpel2_mc21_14_c","_put_h264_qpel2_mc31_14_c","_put_h264_qpel2_mc02_14_c","_put_h264_qpel2_mc12_14_c","_put_h264_qpel2_mc22_14_c","_put_h264_qpel2_mc32_14_c","_put_h264_qpel2_mc03_14_c","_put_h264_qpel2_mc13_14_c","_put_h264_qpel2_mc23_14_c","_put_h264_qpel2_mc33_14_c","_avg_h264_qpel16_mc00_14_c","_avg_h264_qpel16_mc10_14_c","_avg_h264_qpel16_mc20_14_c","_avg_h264_qpel16_mc30_14_c","_avg_h264_qpel16_mc01_14_c","_avg_h264_qpel16_mc11_14_c","_avg_h264_qpel16_mc21_14_c","_avg_h264_qpel16_mc31_14_c","_avg_h264_qpel16_mc02_14_c","_avg_h264_qpel16_mc12_14_c","_avg_h264_qpel16_mc22_14_c","_avg_h264_qpel16_mc32_14_c","_avg_h264_qpel16_mc03_14_c","_avg_h264_qpel16_mc13_14_c","_avg_h264_qpel16_mc23_14_c","_avg_h264_qpel16_mc33_14_c","_avg_h264_qpel8_mc00_14_c","_avg_h264_qpel8_mc10_14_c","_avg_h264_qpel8_mc20_14_c","_avg_h264_qpel8_mc30_14_c","_avg_h264_qpel8_mc01_14_c","_avg_h264_qpel8_mc11_14_c","_avg_h264_qpel8_mc21_14_c","_avg_h264_qpel8_mc31_14_c","_avg_h264_qpel8_mc02_14_c","_avg_h264_qpel8_mc12_14_c","_avg_h264_qpel8_mc22_14_c","_avg_h264_qpel8_mc32_14_c","_avg_h264_qpel8_mc03_14_c","_avg_h264_qpel8_mc13_14_c","_avg_h264_qpel8_mc23_14_c","_avg_h264_qpel8_mc33_14_c","_avg_h264_qpel4_mc00_14_c","_avg_h264_qpel4_mc10_14_c","_avg_h264_qpel4_mc20_14_c","_avg_h264_qpel4_mc30_14_c","_avg_h264_qpel4_mc01_14_c","_avg_h264_qpel4_mc11_14_c","_avg_h264_qpel4_mc21_14_c","_avg_h264_qpel4_mc31_14_c","_avg_h264_qpel4_mc02_14_c","_avg_h264_qpel4_mc12_14_c","_avg_h264_qpel4_mc22_14_c","_avg_h264_qpel4_mc32_14_c","_avg_h264_qpel4_mc03_14_c","_avg_h264_qpel4_mc13_14_c","_avg_h264_qpel4_mc23_14_c","_avg_h264_qpel4_mc33_14_c","_chrRangeFromJpeg_c","_chrRangeToJpeg_c","_chrRangeFromJpeg16_c","_chrRangeToJpeg16_c","_rgb48tobgr48_bswap","_rgb48tobgr64_bswap","_rgb48to64_bswap","_rgb64to48_bswap","_rgb48tobgr48_nobswap","_rgb48tobgr64_nobswap","_rgb48to64_nobswap","_rgb64tobgr48_nobswap","_rgb64tobgr48_bswap","_rgb64to48_nobswap","_rgb12to15","_rgb15to24","_rgb16to24","_rgb32to24","_rgb24to32","_rgb12tobgr12","_rgb15tobgr15","_rgb16tobgr15","_rgb15tobgr16","_rgb16tobgr16","_rgb15tobgr32","_rgb16tobgr32","_rgb15to16_c","_rgb15tobgr24_c","_rgb15to32_c","_rgb16tobgr24_c","_rgb16to32_c","_rgb16to15_c","_rgb24tobgr16_c","_rgb24tobgr15_c","_rgb24tobgr32_c","_rgb32to16_c","_rgb32to15_c","_rgb32tobgr24_c","_rgb24to15_c","_rgb24to16_c","_rgb24tobgr24_c","_shuffle_bytes_0321_c","_shuffle_bytes_2103_c","_shuffle_bytes_1230_c","_shuffle_bytes_3012_c","_shuffle_bytes_3210_c","_rgb32tobgr16_c","_rgb32tobgr15_c","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiii=["0","_av_log_default_callback","_gray16","_gray8","_dct_unquantize_h263_intra_c","_dct_unquantize_h263_inter_c","_dct_unquantize_mpeg1_intra_c","_dct_unquantize_mpeg1_inter_c","_dct_unquantize_mpeg2_intra_c","_dct_unquantize_mpeg2_intra_bitexact","_dct_unquantize_mpeg2_inter_c","_fill_block16_c","_fill_block8_c","_put_pixels16_8_c","_put_pixels16_x2_8_c","_put_pixels16_y2_8_c","_put_pixels16_xy2_8_c","_put_pixels8_8_c","_put_pixels8_x2_8_c","_put_pixels8_y2_8_c","_put_pixels8_xy2_8_c","_put_pixels4_8_c","_put_pixels4_x2_8_c","_put_pixels4_y2_8_c","_put_pixels4_xy2_8_c","_put_pixels2_8_c","_put_pixels2_x2_8_c","_put_pixels2_y2_8_c","_put_pixels2_xy2_8_c","_put_no_rnd_pixels16_8_c","_put_no_rnd_pixels16_x2_8_c","_put_no_rnd_pixels16_y2_8_c","_put_no_rnd_pixels16_xy2_8_c","_put_no_rnd_pixels8_x2_8_c","_put_no_rnd_pixels8_y2_8_c","_put_no_rnd_pixels8_xy2_8_c","_avg_pixels16_8_c","_avg_pixels16_x2_8_c","_avg_pixels16_y2_8_c","_avg_pixels16_xy2_8_c","_avg_pixels8_8_c","_avg_pixels8_x2_8_c","_avg_pixels8_y2_8_c","_avg_pixels8_xy2_8_c","_avg_pixels4_8_c","_avg_pixels4_x2_8_c","_avg_pixels4_y2_8_c","_avg_pixels4_xy2_8_c","_avg_pixels2_8_c","_avg_pixels2_x2_8_c","_avg_pixels2_y2_8_c","_avg_pixels2_xy2_8_c","_avg_no_rnd_pixels16_8_c","_avg_no_rnd_pixels16_x2_8_c","_avg_no_rnd_pixels16_y2_8_c","_avg_no_rnd_pixels16_xy2_8_c","_vector_fmul_c","_vector_fmul_reverse_c","_mix6to2_s16","_mix8to2_s16","_mix6to2_clip_s16","_mix8to2_clip_s16","_mix6to2_float","_mix8to2_float","_mix6to2_double","_mix8to2_double","_mix6to2_s32","_mix8to2_s32","_fft15_c","_mdct15","_imdct15_half","_ac3_sum_square_butterfly_int32_c","_ac3_sum_square_butterfly_float_c","_apply_window_int16_c","_apply_tns","_windowing_and_mdct_ltp","_ps_mul_pair_single_c","_ps_hybrid_analysis_ileave_c","_ps_hybrid_synthesis_deint_c","_tm_4x4_c_6989","_dc_128_4x4_c_6990","_dc_127_4x4_c_6991","_dc_129_4x4_c_6992","_tm_8x8_c_6993","_dc_128_8x8_c_6994","_dc_127_8x8_c_6995","_dc_129_8x8_c_6996","_tm_16x16_c_6997","_dc_128_16x16_c_6998","_dc_127_16x16_c_6999","_dc_129_16x16_c_7000","_tm_32x32_c_7001","_dc_128_32x32_c_7002","_dc_127_32x32_c_7003","_dc_129_32x32_c_7004","_idct_idct_4x4_add_c_6975","_iadst_idct_4x4_add_c_6976","_idct_iadst_4x4_add_c_6977","_iadst_iadst_4x4_add_c_6978","_idct_idct_8x8_add_c_6979","_iadst_idct_8x8_add_c_6980","_idct_iadst_8x8_add_c_6981","_iadst_iadst_8x8_add_c_6982","_idct_idct_16x16_add_c_6983","_iadst_idct_16x16_add_c_6984","_idct_iadst_16x16_add_c_6985","_iadst_iadst_16x16_add_c_6986","_idct_idct_32x32_add_c_6987","_iwht_iwht_4x4_add_c_6988","_vert_4x4_c","_hor_4x4_c","_dc_4x4_c","_diag_downleft_4x4_c","_diag_downright_4x4_c","_vert_right_4x4_c","_hor_down_4x4_c","_vert_left_4x4_c","_hor_up_4x4_c","_dc_left_4x4_c","_dc_top_4x4_c","_tm_4x4_c","_dc_128_4x4_c","_dc_127_4x4_c","_dc_129_4x4_c","_vert_8x8_c","_hor_8x8_c","_dc_8x8_c","_diag_downleft_8x8_c","_diag_downright_8x8_c","_vert_right_8x8_c","_hor_down_8x8_c","_vert_left_8x8_c","_hor_up_8x8_c","_dc_left_8x8_c","_dc_top_8x8_c","_tm_8x8_c","_dc_128_8x8_c","_dc_127_8x8_c","_dc_129_8x8_c","_vert_16x16_c","_hor_16x16_c","_dc_16x16_c","_diag_downleft_16x16_c","_diag_downright_16x16_c","_vert_right_16x16_c","_hor_down_16x16_c","_vert_left_16x16_c","_hor_up_16x16_c","_dc_left_16x16_c","_dc_top_16x16_c","_tm_16x16_c","_dc_128_16x16_c","_dc_127_16x16_c","_dc_129_16x16_c","_vert_32x32_c","_hor_32x32_c","_dc_32x32_c","_diag_downleft_32x32_c","_diag_downright_32x32_c","_vert_right_32x32_c","_hor_down_32x32_c","_vert_left_32x32_c","_hor_up_32x32_c","_dc_left_32x32_c","_dc_top_32x32_c","_tm_32x32_c","_dc_128_32x32_c","_dc_127_32x32_c","_dc_129_32x32_c","_idct_idct_4x4_add_c","_iadst_idct_4x4_add_c","_idct_iadst_4x4_add_c","_iadst_iadst_4x4_add_c","_idct_idct_8x8_add_c","_iadst_idct_8x8_add_c","_idct_iadst_8x8_add_c","_iadst_iadst_8x8_add_c","_idct_idct_16x16_add_c","_iadst_idct_16x16_add_c","_idct_iadst_16x16_add_c","_iadst_iadst_16x16_add_c","_idct_idct_32x32_add_c","_iwht_iwht_4x4_add_c","_vert_4x4_c_7225","_hor_4x4_c_7226","_dc_4x4_c_7227","_diag_downleft_4x4_c_7228","_diag_downright_4x4_c_7229","_vert_right_4x4_c_7230","_hor_down_4x4_c_7231","_vert_left_4x4_c_7232","_hor_up_4x4_c_7233","_dc_left_4x4_c_7234","_dc_top_4x4_c_7235","_tm_4x4_c_7236","_dc_128_4x4_c_7237","_dc_127_4x4_c_7238","_dc_129_4x4_c_7239","_vert_8x8_c_7240","_hor_8x8_c_7241","_dc_8x8_c_7242","_diag_downleft_8x8_c_7243","_diag_downright_8x8_c_7244","_vert_right_8x8_c_7245","_hor_down_8x8_c_7246","_vert_left_8x8_c_7247","_hor_up_8x8_c_7248","_dc_left_8x8_c_7249","_dc_top_8x8_c_7250","_tm_8x8_c_7251","_dc_128_8x8_c_7252","_dc_127_8x8_c_7253","_dc_129_8x8_c_7254","_vert_16x16_c_7255","_hor_16x16_c_7256","_dc_16x16_c_7257","_diag_downleft_16x16_c_7258","_diag_downright_16x16_c_7259","_vert_right_16x16_c_7260","_hor_down_16x16_c_7261","_vert_left_16x16_c_7262","_hor_up_16x16_c_7263","_dc_left_16x16_c_7264","_dc_top_16x16_c_7265","_tm_16x16_c_7266","_dc_128_16x16_c_7267","_dc_127_16x16_c_7268","_dc_129_16x16_c_7269","_vert_32x32_c_7270","_hor_32x32_c_7271","_dc_32x32_c_7272","_diag_downleft_32x32_c_7273","_diag_downright_32x32_c_7274","_vert_right_32x32_c_7275","_hor_down_32x32_c_7276","_vert_left_32x32_c_7277","_hor_up_32x32_c_7278","_dc_left_32x32_c_7279","_dc_top_32x32_c_7280","_tm_32x32_c_7281","_dc_128_32x32_c_7282","_dc_127_32x32_c_7283","_dc_129_32x32_c_7284","_idct_idct_4x4_add_c_7211","_iadst_idct_4x4_add_c_7212","_idct_iadst_4x4_add_c_7213","_iadst_iadst_4x4_add_c_7214","_idct_idct_8x8_add_c_7215","_iadst_idct_8x8_add_c_7216","_idct_iadst_8x8_add_c_7217","_iadst_iadst_8x8_add_c_7218","_idct_idct_16x16_add_c_7219","_iadst_idct_16x16_add_c_7220","_idct_iadst_16x16_add_c_7221","_iadst_iadst_16x16_add_c_7222","_idct_idct_32x32_add_c_7223","_iwht_iwht_4x4_add_c_7224","_vp8_filter_mb_row","_pred8x8l_vertical_9_c","_pred8x8l_horizontal_9_c","_pred8x8l_dc_9_c","_pred8x8l_down_left_9_c","_pred8x8l_down_right_9_c","_pred8x8l_vertical_right_9_c","_pred8x8l_horizontal_down_9_c","_pred8x8l_vertical_left_9_c","_pred8x8l_horizontal_up_9_c","_pred8x8l_left_dc_9_c","_pred8x8l_top_dc_9_c","_pred8x8l_128_dc_9_c","_pred8x16_vertical_add_9_c","_pred8x8_vertical_add_9_c","_pred8x16_horizontal_add_9_c","_pred8x8_horizontal_add_9_c","_pred8x8l_vertical_10_c","_pred8x8l_horizontal_10_c","_pred8x8l_dc_10_c","_pred8x8l_down_left_10_c","_pred8x8l_down_right_10_c","_pred8x8l_vertical_right_10_c","_pred8x8l_horizontal_down_10_c","_pred8x8l_vertical_left_10_c","_pred8x8l_horizontal_up_10_c","_pred8x8l_left_dc_10_c","_pred8x8l_top_dc_10_c","_pred8x8l_128_dc_10_c","_pred8x16_vertical_add_10_c","_pred8x8_vertical_add_10_c","_pred8x16_horizontal_add_10_c","_pred8x8_horizontal_add_10_c","_pred8x8l_vertical_12_c","_pred8x8l_horizontal_12_c","_pred8x8l_dc_12_c","_pred8x8l_down_left_12_c","_pred8x8l_down_right_12_c","_pred8x8l_vertical_right_12_c","_pred8x8l_horizontal_down_12_c","_pred8x8l_vertical_left_12_c","_pred8x8l_horizontal_up_12_c","_pred8x8l_left_dc_12_c","_pred8x8l_top_dc_12_c","_pred8x8l_128_dc_12_c","_pred8x16_vertical_add_12_c","_pred8x8_vertical_add_12_c","_pred8x16_horizontal_add_12_c","_pred8x8_horizontal_add_12_c","_pred8x8l_vertical_14_c","_pred8x8l_horizontal_14_c","_pred8x8l_dc_14_c","_pred8x8l_down_left_14_c","_pred8x8l_down_right_14_c","_pred8x8l_vertical_right_14_c","_pred8x8l_horizontal_down_14_c","_pred8x8l_vertical_left_14_c","_pred8x8l_horizontal_up_14_c","_pred8x8l_left_dc_14_c","_pred8x8l_top_dc_14_c","_pred8x8l_128_dc_14_c","_pred8x16_vertical_add_14_c","_pred8x8_vertical_add_14_c","_pred8x16_horizontal_add_14_c","_pred8x8_horizontal_add_14_c","_pred8x8l_vertical_8_c","_pred8x8l_horizontal_8_c","_pred8x8l_dc_8_c","_pred8x8l_down_left_8_c","_pred8x8l_down_right_8_c","_pred8x8l_vertical_right_8_c","_pred8x8l_horizontal_down_8_c","_pred8x8l_vertical_left_8_c","_pred8x8l_horizontal_up_8_c","_pred8x8l_left_dc_8_c","_pred8x8l_top_dc_8_c","_pred8x8l_128_dc_8_c","_pred8x16_vertical_add_8_c","_pred8x8_vertical_add_8_c","_pred8x16_horizontal_add_8_c","_pred8x8_horizontal_add_8_c","_pred16x16_vertical_add_9_c","_pred16x16_horizontal_add_9_c","_pred16x16_vertical_add_10_c","_pred16x16_horizontal_add_10_c","_pred16x16_vertical_add_12_c","_pred16x16_horizontal_add_12_c","_pred16x16_vertical_add_14_c","_pred16x16_horizontal_add_14_c","_pred16x16_vertical_add_8_c","_pred16x16_horizontal_add_8_c","_intra_pred_2_9","_intra_pred_3_9","_intra_pred_4_9","_intra_pred_5_9","_pred_planar_0_9","_pred_planar_1_9","_pred_planar_2_9","_pred_planar_3_9","_intra_pred_2_10","_intra_pred_3_10","_intra_pred_4_10","_intra_pred_5_10","_pred_planar_0_10","_pred_planar_1_10","_pred_planar_2_10","_pred_planar_3_10","_intra_pred_2_12","_intra_pred_3_12","_intra_pred_4_12","_intra_pred_5_12","_pred_planar_0_12","_pred_planar_1_12","_pred_planar_2_12","_pred_planar_3_12","_intra_pred_2_8","_intra_pred_3_8","_intra_pred_4_8","_intra_pred_5_8","_pred_planar_0_8","_pred_planar_1_8","_pred_planar_2_8","_pred_planar_3_8","_h264_v_loop_filter_luma_intra_9_c","_h264_h_loop_filter_luma_intra_9_c","_h264_h_loop_filter_luma_mbaff_intra_9_c","_h264_v_loop_filter_chroma_intra_9_c","_h264_h_loop_filter_chroma422_intra_9_c","_h264_h_loop_filter_chroma_intra_9_c","_h264_h_loop_filter_chroma422_mbaff_intra_9_c","_h264_h_loop_filter_chroma_mbaff_intra_9_c","_h264_v_loop_filter_luma_intra_10_c","_h264_h_loop_filter_luma_intra_10_c","_h264_h_loop_filter_luma_mbaff_intra_10_c","_h264_v_loop_filter_chroma_intra_10_c","_h264_h_loop_filter_chroma422_intra_10_c","_h264_h_loop_filter_chroma_intra_10_c","_h264_h_loop_filter_chroma422_mbaff_intra_10_c","_h264_h_loop_filter_chroma_mbaff_intra_10_c","_h264_v_loop_filter_luma_intra_12_c","_h264_h_loop_filter_luma_intra_12_c","_h264_h_loop_filter_luma_mbaff_intra_12_c","_h264_v_loop_filter_chroma_intra_12_c","_h264_h_loop_filter_chroma422_intra_12_c","_h264_h_loop_filter_chroma_intra_12_c","_h264_h_loop_filter_chroma422_mbaff_intra_12_c","_h264_h_loop_filter_chroma_mbaff_intra_12_c","_h264_v_loop_filter_luma_intra_14_c","_h264_h_loop_filter_luma_intra_14_c","_h264_h_loop_filter_luma_mbaff_intra_14_c","_h264_v_loop_filter_chroma_intra_14_c","_h264_h_loop_filter_chroma422_intra_14_c","_h264_h_loop_filter_chroma_intra_14_c","_h264_h_loop_filter_chroma422_mbaff_intra_14_c","_h264_h_loop_filter_chroma_mbaff_intra_14_c","_h264_v_loop_filter_luma_intra_8_c","_h264_h_loop_filter_luma_intra_8_c","_h264_h_loop_filter_luma_mbaff_intra_8_c","_h264_v_loop_filter_chroma_intra_8_c","_h264_h_loop_filter_chroma422_intra_8_c","_h264_h_loop_filter_chroma_intra_8_c","_h264_h_loop_filter_chroma422_mbaff_intra_8_c","_h264_h_loop_filter_chroma_mbaff_intra_8_c","_planar_rgb9le_to_y","_planar_rgb10le_to_a","_planar_rgb10le_to_y","_planar_rgb12le_to_a","_planar_rgb12le_to_y","_planar_rgb14le_to_y","_planar_rgb16le_to_a","_planar_rgb16le_to_y","_planar_rgb9be_to_y","_planar_rgb10be_to_a","_planar_rgb10be_to_y","_planar_rgb12be_to_a","_planar_rgb12be_to_y","_planar_rgb14be_to_y","_planar_rgb16be_to_a","_planar_rgb16be_to_y","_planar_rgb_to_a","_planar_rgb_to_y","_gray8aToPacked32","_gray8aToPacked32_1","_gray8aToPacked24","_sws_convertPalette8ToPacked32","_sws_convertPalette8ToPacked24","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiifii=["0","_sbr_hf_gen_c"];var debug_table_viiiii=["0","_conv_AV_SAMPLE_FMT_U8_to_AV_SAMPLE_FMT_U8","_conv_AV_SAMPLE_FMT_U8_to_AV_SAMPLE_FMT_S16","_conv_AV_SAMPLE_FMT_U8_to_AV_SAMPLE_FMT_S32","_conv_AV_SAMPLE_FMT_U8_to_AV_SAMPLE_FMT_FLT","_conv_AV_SAMPLE_FMT_U8_to_AV_SAMPLE_FMT_DBL","_conv_AV_SAMPLE_FMT_U8_to_AV_SAMPLE_FMT_S64","_conv_AV_SAMPLE_FMT_S16_to_AV_SAMPLE_FMT_U8","_conv_AV_SAMPLE_FMT_S16_to_AV_SAMPLE_FMT_S16","_conv_AV_SAMPLE_FMT_S16_to_AV_SAMPLE_FMT_S32","_conv_AV_SAMPLE_FMT_S16_to_AV_SAMPLE_FMT_FLT","_conv_AV_SAMPLE_FMT_S16_to_AV_SAMPLE_FMT_DBL","_conv_AV_SAMPLE_FMT_S16_to_AV_SAMPLE_FMT_S64","_conv_AV_SAMPLE_FMT_S32_to_AV_SAMPLE_FMT_U8","_conv_AV_SAMPLE_FMT_S32_to_AV_SAMPLE_FMT_S16","_conv_AV_SAMPLE_FMT_S32_to_AV_SAMPLE_FMT_S32","_conv_AV_SAMPLE_FMT_S32_to_AV_SAMPLE_FMT_FLT","_conv_AV_SAMPLE_FMT_S32_to_AV_SAMPLE_FMT_DBL","_conv_AV_SAMPLE_FMT_S32_to_AV_SAMPLE_FMT_S64","_conv_AV_SAMPLE_FMT_FLT_to_AV_SAMPLE_FMT_U8","_conv_AV_SAMPLE_FMT_FLT_to_AV_SAMPLE_FMT_S16","_conv_AV_SAMPLE_FMT_FLT_to_AV_SAMPLE_FMT_S32","_conv_AV_SAMPLE_FMT_FLT_to_AV_SAMPLE_FMT_FLT","_conv_AV_SAMPLE_FMT_FLT_to_AV_SAMPLE_FMT_DBL","_conv_AV_SAMPLE_FMT_FLT_to_AV_SAMPLE_FMT_S64","_conv_AV_SAMPLE_FMT_DBL_to_AV_SAMPLE_FMT_U8","_conv_AV_SAMPLE_FMT_DBL_to_AV_SAMPLE_FMT_S16","_conv_AV_SAMPLE_FMT_DBL_to_AV_SAMPLE_FMT_S32","_conv_AV_SAMPLE_FMT_DBL_to_AV_SAMPLE_FMT_FLT","_conv_AV_SAMPLE_FMT_DBL_to_AV_SAMPLE_FMT_DBL","_conv_AV_SAMPLE_FMT_DBL_to_AV_SAMPLE_FMT_S64","_conv_AV_SAMPLE_FMT_S64_to_AV_SAMPLE_FMT_U8","_conv_AV_SAMPLE_FMT_S64_to_AV_SAMPLE_FMT_S16","_conv_AV_SAMPLE_FMT_S64_to_AV_SAMPLE_FMT_S32","_conv_AV_SAMPLE_FMT_S64_to_AV_SAMPLE_FMT_FLT","_conv_AV_SAMPLE_FMT_S64_to_AV_SAMPLE_FMT_DBL","_conv_AV_SAMPLE_FMT_S64_to_AV_SAMPLE_FMT_S64","_vector_fmul_window_c","_vector_fmul_add_c","_copy_s16","_copy_clip_s16","_copy_float","_copy_double","_copy_s32","_postrotate_c","_ff_mpadsp_apply_window_float","_ff_mpadsp_apply_window_fixed","_int32_to_float_fmul_array8_c","_sbr_hf_assemble","_sbr_hf_inverse_filter","_sbr_hf_g_filt_c","_ps_hybrid_analysis_c","_ps_stereo_interpolate_c","_ps_stereo_interpolate_ipdopd_c","_loop_filter_h_4_8_c_6959","_loop_filter_v_4_8_c_6960","_loop_filter_h_8_8_c_6961","_loop_filter_v_8_8_c_6962","_loop_filter_h_16_8_c_6963","_loop_filter_v_16_8_c_6964","_loop_filter_h_16_16_c_6965","_loop_filter_v_16_16_c_6966","_loop_filter_h_44_16_c_6967","_loop_filter_v_44_16_c_6968","_loop_filter_h_48_16_c_6969","_loop_filter_v_48_16_c_6970","_loop_filter_h_84_16_c_6971","_loop_filter_v_84_16_c_6972","_loop_filter_h_88_16_c_6973","_loop_filter_v_88_16_c_6974","_loop_filter_h_4_8_c","_loop_filter_v_4_8_c","_loop_filter_h_8_8_c","_loop_filter_v_8_8_c","_loop_filter_h_16_8_c","_loop_filter_v_16_8_c","_loop_filter_h_16_16_c","_loop_filter_v_16_16_c","_loop_filter_h_44_16_c","_loop_filter_v_44_16_c","_loop_filter_h_48_16_c","_loop_filter_v_48_16_c","_loop_filter_h_84_16_c","_loop_filter_v_84_16_c","_loop_filter_h_88_16_c","_loop_filter_v_88_16_c","_loop_filter_h_4_8_c_7195","_loop_filter_v_4_8_c_7196","_loop_filter_h_8_8_c_7197","_loop_filter_v_8_8_c_7198","_loop_filter_h_16_8_c_7199","_loop_filter_v_16_8_c_7200","_loop_filter_h_16_16_c_7201","_loop_filter_v_16_16_c_7202","_loop_filter_h_44_16_c_7203","_loop_filter_v_44_16_c_7204","_loop_filter_h_48_16_c_7205","_loop_filter_v_48_16_c_7206","_loop_filter_h_84_16_c_7207","_loop_filter_v_84_16_c_7208","_loop_filter_h_88_16_c_7209","_loop_filter_v_88_16_c_7210","_pred8x8l_vertical_filter_add_9_c","_pred8x8l_horizontal_filter_add_9_c","_pred8x8l_vertical_filter_add_10_c","_pred8x8l_horizontal_filter_add_10_c","_pred8x8l_vertical_filter_add_12_c","_pred8x8l_horizontal_filter_add_12_c","_pred8x8l_vertical_filter_add_14_c","_pred8x8l_horizontal_filter_add_14_c","_pred8x8l_vertical_filter_add_8_c","_pred8x8l_horizontal_filter_add_8_c","_vp8_v_loop_filter16_c","_vp8_h_loop_filter16_c","_vp8_v_loop_filter16_inner_c","_vp8_h_loop_filter16_inner_c","_put_no_rnd_pixels_l2","_hevc_h_loop_filter_chroma_9","_hevc_v_loop_filter_chroma_9","_hevc_h_loop_filter_chroma_10","_hevc_v_loop_filter_chroma_10","_hevc_h_loop_filter_chroma_12","_hevc_v_loop_filter_chroma_12","_hevc_h_loop_filter_chroma_8","_hevc_v_loop_filter_chroma_8","_ff_h264_idct_add16_9_c","_ff_h264_idct8_add4_9_c","_ff_h264_idct_add8_422_9_c","_ff_h264_idct_add8_9_c","_ff_h264_idct_add16intra_9_c","_h264_v_loop_filter_luma_9_c","_h264_h_loop_filter_luma_9_c","_h264_h_loop_filter_luma_mbaff_9_c","_h264_v_loop_filter_chroma_9_c","_h264_h_loop_filter_chroma422_9_c","_h264_h_loop_filter_chroma_9_c","_h264_h_loop_filter_chroma422_mbaff_9_c","_h264_h_loop_filter_chroma_mbaff_9_c","_ff_h264_idct_add16_10_c","_ff_h264_idct8_add4_10_c","_ff_h264_idct_add8_422_10_c","_ff_h264_idct_add8_10_c","_ff_h264_idct_add16intra_10_c","_h264_v_loop_filter_luma_10_c","_h264_h_loop_filter_luma_10_c","_h264_h_loop_filter_luma_mbaff_10_c","_h264_v_loop_filter_chroma_10_c","_h264_h_loop_filter_chroma422_10_c","_h264_h_loop_filter_chroma_10_c","_h264_h_loop_filter_chroma422_mbaff_10_c","_h264_h_loop_filter_chroma_mbaff_10_c","_ff_h264_idct_add16_12_c","_ff_h264_idct8_add4_12_c","_ff_h264_idct_add8_422_12_c","_ff_h264_idct_add8_12_c","_ff_h264_idct_add16intra_12_c","_h264_v_loop_filter_luma_12_c","_h264_h_loop_filter_luma_12_c","_h264_h_loop_filter_luma_mbaff_12_c","_h264_v_loop_filter_chroma_12_c","_h264_h_loop_filter_chroma422_12_c","_h264_h_loop_filter_chroma_12_c","_h264_h_loop_filter_chroma422_mbaff_12_c","_h264_h_loop_filter_chroma_mbaff_12_c","_ff_h264_idct_add16_14_c","_ff_h264_idct8_add4_14_c","_ff_h264_idct_add8_422_14_c","_ff_h264_idct_add8_14_c","_ff_h264_idct_add16intra_14_c","_h264_v_loop_filter_luma_14_c","_h264_h_loop_filter_luma_14_c","_h264_h_loop_filter_luma_mbaff_14_c","_h264_v_loop_filter_chroma_14_c","_h264_h_loop_filter_chroma422_14_c","_h264_h_loop_filter_chroma_14_c","_h264_h_loop_filter_chroma422_mbaff_14_c","_h264_h_loop_filter_chroma_mbaff_14_c","_ff_h264_idct_add16_8_c","_ff_h264_idct8_add4_8_c","_ff_h264_idct_add8_422_8_c","_ff_h264_idct_add8_8_c","_ff_h264_idct_add16intra_8_c","_h264_v_loop_filter_luma_8_c","_h264_h_loop_filter_luma_8_c","_h264_h_loop_filter_luma_mbaff_8_c","_h264_v_loop_filter_chroma_8_c","_h264_h_loop_filter_chroma422_8_c","_h264_h_loop_filter_chroma_8_c","_h264_h_loop_filter_chroma422_mbaff_8_c","_h264_h_loop_filter_chroma_mbaff_8_c","_yuv2p010l1_BE_c","_yuv2p010l1_LE_c","_yuv2plane1_16BE_c","_yuv2plane1_16LE_c","_yuv2plane1_9BE_c","_yuv2plane1_9LE_c","_yuv2plane1_10BE_c","_yuv2plane1_10LE_c","_yuv2plane1_12BE_c","_yuv2plane1_12LE_c","_yuv2plane1_14BE_c","_yuv2plane1_14LE_c","_yuv2plane1_floatBE_c","_yuv2plane1_floatLE_c","_yuv2plane1_8_c","_planar_rgb9le_to_uv","_planar_rgb10le_to_uv","_planar_rgb12le_to_uv","_planar_rgb14le_to_uv","_planar_rgb16le_to_uv","_planar_rgb9be_to_uv","_planar_rgb10be_to_uv","_planar_rgb12be_to_uv","_planar_rgb14be_to_uv","_planar_rgb16be_to_uv","_planar_rgb_to_uv","_bayer_bggr8_to_rgb24_copy","_bayer_bggr8_to_rgb24_interpolate","_bayer_bggr16le_to_rgb24_copy","_bayer_bggr16le_to_rgb24_interpolate","_bayer_bggr16be_to_rgb24_copy","_bayer_bggr16be_to_rgb24_interpolate","_bayer_rggb8_to_rgb24_copy","_bayer_rggb8_to_rgb24_interpolate","_bayer_rggb16le_to_rgb24_copy","_bayer_rggb16le_to_rgb24_interpolate","_bayer_rggb16be_to_rgb24_copy","_bayer_rggb16be_to_rgb24_interpolate","_bayer_gbrg8_to_rgb24_copy","_bayer_gbrg8_to_rgb24_interpolate","_bayer_gbrg16le_to_rgb24_copy","_bayer_gbrg16le_to_rgb24_interpolate","_bayer_gbrg16be_to_rgb24_copy","_bayer_gbrg16be_to_rgb24_interpolate","_bayer_grbg8_to_rgb24_copy","_bayer_grbg8_to_rgb24_interpolate","_bayer_grbg16le_to_rgb24_copy","_bayer_grbg16le_to_rgb24_interpolate","_bayer_grbg16be_to_rgb24_copy","_bayer_grbg16be_to_rgb24_interpolate","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiiii=["0","_read_geobtag","_read_apic","_read_chapter","_read_priv","_image_copy_plane","_put_h264_chroma_mc8_8_c","_put_h264_chroma_mc8_16_c","_put_h264_chroma_mc4_8_c","_put_h264_chroma_mc4_16_c","_put_h264_chroma_mc2_8_c","_put_h264_chroma_mc2_16_c","_put_h264_chroma_mc1_8_c","_put_h264_chroma_mc1_16_c","_avg_h264_chroma_mc8_8_c","_avg_h264_chroma_mc8_16_c","_avg_h264_chroma_mc4_8_c","_avg_h264_chroma_mc4_16_c","_avg_h264_chroma_mc2_8_c","_avg_h264_chroma_mc2_16_c","_avg_h264_chroma_mc1_8_c","_avg_h264_chroma_mc1_16_c","_ff_imdct36_blocks_float","_ff_imdct36_blocks_fixed","_sbr_hf_apply_noise_0","_sbr_hf_apply_noise_1","_sbr_hf_apply_noise_2","_sbr_hf_apply_noise_3","_vp8_v_loop_filter8uv_c","_vp8_h_loop_filter8uv_c","_vp8_v_loop_filter8uv_inner_c","_vp8_h_loop_filter8uv_inner_c","_pred_dc_9","_pred_angular_0_9","_pred_angular_1_9","_pred_angular_2_9","_pred_angular_3_9","_pred_dc_10","_pred_angular_0_10","_pred_angular_1_10","_pred_angular_2_10","_pred_angular_3_10","_pred_dc_12","_pred_angular_0_12","_pred_angular_1_12","_pred_angular_2_12","_pred_angular_3_12","_pred_dc_8","_pred_angular_0_8","_pred_angular_1_8","_pred_angular_2_8","_pred_angular_3_8","_put_pcm_9","_hevc_h_loop_filter_luma_9","_hevc_v_loop_filter_luma_9","_put_pcm_10","_hevc_h_loop_filter_luma_10","_hevc_v_loop_filter_luma_10","_put_pcm_12","_hevc_h_loop_filter_luma_12","_hevc_v_loop_filter_luma_12","_put_pcm_8","_hevc_h_loop_filter_luma_8","_hevc_v_loop_filter_luma_8","_weight_h264_pixels16_9_c","_weight_h264_pixels8_9_c","_weight_h264_pixels4_9_c","_weight_h264_pixels2_9_c","_weight_h264_pixels16_10_c","_weight_h264_pixels8_10_c","_weight_h264_pixels4_10_c","_weight_h264_pixels2_10_c","_weight_h264_pixels16_12_c","_weight_h264_pixels8_12_c","_weight_h264_pixels4_12_c","_weight_h264_pixels2_12_c","_weight_h264_pixels16_14_c","_weight_h264_pixels8_14_c","_weight_h264_pixels4_14_c","_weight_h264_pixels2_14_c","_weight_h264_pixels16_8_c","_weight_h264_pixels8_8_c","_weight_h264_pixels4_8_c","_weight_h264_pixels2_8_c","_aes_encrypt","_aes_decrypt","_ff_hyscale_fast_c","_bswap16Y_c","_read_ya16le_gray_c","_read_ya16be_gray_c","_read_ayuv64le_Y_c","_yuy2ToY_c","_uyvyToY_c","_bgr24ToY_c","_bgr16leToY_c","_bgr16beToY_c","_bgr15leToY_c","_bgr15beToY_c","_bgr12leToY_c","_bgr12beToY_c","_rgb24ToY_c","_rgb16leToY_c","_rgb16beToY_c","_rgb15leToY_c","_rgb15beToY_c","_rgb12leToY_c","_rgb12beToY_c","_palToY_c","_monoblack2Y_c","_monowhite2Y_c","_bgr32ToY_c","_bgr321ToY_c","_rgb32ToY_c","_rgb321ToY_c","_rgb48BEToY_c","_rgb48LEToY_c","_bgr48BEToY_c","_bgr48LEToY_c","_rgb64BEToY_c","_rgb64LEToY_c","_bgr64BEToY_c","_bgr64LEToY_c","_p010LEToY_c","_p010BEToY_c","_grayf32ToY16_c","_grayf32ToY16_bswap_c","_rgba64leToA_c","_rgba64beToA_c","_rgbaToA_c","_abgrToA_c","_read_ya16le_alpha_c","_read_ya16be_alpha_c","_read_ayuv64le_A_c","_palToA_c","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiiiifi=["0","_ps_decorrelate_c"];var debug_table_viiiiiii=["0","_gmc1_c","_sum2_s16","_sum2_clip_s16","_sum2_float","_sum2_double","_sum2_s32","_put_8tap_smooth_64hv_c_6863","_put_8tap_regular_64hv_c_6864","_put_8tap_sharp_64hv_c_6865","_put_8tap_smooth_32hv_c_6866","_put_8tap_regular_32hv_c_6867","_put_8tap_sharp_32hv_c_6868","_put_8tap_smooth_16hv_c_6869","_put_8tap_regular_16hv_c_6870","_put_8tap_sharp_16hv_c_6871","_put_8tap_smooth_8hv_c_6872","_put_8tap_regular_8hv_c_6873","_put_8tap_sharp_8hv_c_6874","_put_8tap_smooth_4hv_c_6875","_put_8tap_regular_4hv_c_6876","_put_8tap_sharp_4hv_c_6877","_put_8tap_smooth_64v_c_6878","_put_8tap_regular_64v_c_6879","_put_8tap_sharp_64v_c_6880","_put_8tap_smooth_32v_c_6881","_put_8tap_regular_32v_c_6882","_put_8tap_sharp_32v_c_6883","_put_8tap_smooth_16v_c_6884","_put_8tap_regular_16v_c_6885","_put_8tap_sharp_16v_c_6886","_put_8tap_smooth_8v_c_6887","_put_8tap_regular_8v_c_6888","_put_8tap_sharp_8v_c_6889","_put_8tap_smooth_4v_c_6890","_put_8tap_regular_4v_c_6891","_put_8tap_sharp_4v_c_6892","_put_8tap_smooth_64h_c_6893","_put_8tap_regular_64h_c_6894","_put_8tap_sharp_64h_c_6895","_put_8tap_smooth_32h_c_6896","_put_8tap_regular_32h_c_6897","_put_8tap_sharp_32h_c_6898","_put_8tap_smooth_16h_c_6899","_put_8tap_regular_16h_c_6900","_put_8tap_sharp_16h_c_6901","_put_8tap_smooth_8h_c_6902","_put_8tap_regular_8h_c_6903","_put_8tap_sharp_8h_c_6904","_put_8tap_smooth_4h_c_6905","_put_8tap_regular_4h_c_6906","_put_8tap_sharp_4h_c_6907","_avg_8tap_smooth_64hv_c_6908","_avg_8tap_regular_64hv_c_6909","_avg_8tap_sharp_64hv_c_6910","_avg_8tap_smooth_32hv_c_6911","_avg_8tap_regular_32hv_c_6912","_avg_8tap_sharp_32hv_c_6913","_avg_8tap_smooth_16hv_c_6914","_avg_8tap_regular_16hv_c_6915","_avg_8tap_sharp_16hv_c_6916","_avg_8tap_smooth_8hv_c_6917","_avg_8tap_regular_8hv_c_6918","_avg_8tap_sharp_8hv_c_6919","_avg_8tap_smooth_4hv_c_6920","_avg_8tap_regular_4hv_c_6921","_avg_8tap_sharp_4hv_c_6922","_avg_8tap_smooth_64v_c_6923","_avg_8tap_regular_64v_c_6924","_avg_8tap_sharp_64v_c_6925","_avg_8tap_smooth_32v_c_6926","_avg_8tap_regular_32v_c_6927","_avg_8tap_sharp_32v_c_6928","_avg_8tap_smooth_16v_c_6929","_avg_8tap_regular_16v_c_6930","_avg_8tap_sharp_16v_c_6931","_avg_8tap_smooth_8v_c_6932","_avg_8tap_regular_8v_c_6933","_avg_8tap_sharp_8v_c_6934","_avg_8tap_smooth_4v_c_6935","_avg_8tap_regular_4v_c_6936","_avg_8tap_sharp_4v_c_6937","_avg_8tap_smooth_64h_c_6938","_avg_8tap_regular_64h_c_6939","_avg_8tap_sharp_64h_c_6940","_avg_8tap_smooth_32h_c_6941","_avg_8tap_regular_32h_c_6942","_avg_8tap_sharp_32h_c_6943","_avg_8tap_smooth_16h_c_6944","_avg_8tap_regular_16h_c_6945","_avg_8tap_sharp_16h_c_6946","_avg_8tap_smooth_8h_c_6947","_avg_8tap_regular_8h_c_6948","_avg_8tap_sharp_8h_c_6949","_avg_8tap_smooth_4h_c_6950","_avg_8tap_regular_4h_c_6951","_avg_8tap_sharp_4h_c_6952","_copy64_c","_avg64_c","_copy32_c","_avg32_c","_copy16_c","_avg16_c","_copy8_c","_avg8_c","_copy4_c","_avg4_c","_put_8tap_smooth_64hv_c","_put_8tap_regular_64hv_c","_put_8tap_sharp_64hv_c","_put_bilin_64hv_c","_put_8tap_smooth_32hv_c","_put_8tap_regular_32hv_c","_put_8tap_sharp_32hv_c","_put_bilin_32hv_c","_put_8tap_smooth_16hv_c","_put_8tap_regular_16hv_c","_put_8tap_sharp_16hv_c","_put_bilin_16hv_c","_put_8tap_smooth_8hv_c","_put_8tap_regular_8hv_c","_put_8tap_sharp_8hv_c","_put_bilin_8hv_c","_put_8tap_smooth_4hv_c","_put_8tap_regular_4hv_c","_put_8tap_sharp_4hv_c","_put_bilin_4hv_c","_put_8tap_smooth_64v_c","_put_8tap_regular_64v_c","_put_8tap_sharp_64v_c","_put_bilin_64v_c","_put_8tap_smooth_32v_c","_put_8tap_regular_32v_c","_put_8tap_sharp_32v_c","_put_bilin_32v_c","_put_8tap_smooth_16v_c","_put_8tap_regular_16v_c","_put_8tap_sharp_16v_c","_put_bilin_16v_c","_put_8tap_smooth_8v_c","_put_8tap_regular_8v_c","_put_8tap_sharp_8v_c","_put_bilin_8v_c","_put_8tap_smooth_4v_c","_put_8tap_regular_4v_c","_put_8tap_sharp_4v_c","_put_bilin_4v_c","_put_8tap_smooth_64h_c","_put_8tap_regular_64h_c","_put_8tap_sharp_64h_c","_put_bilin_64h_c","_put_8tap_smooth_32h_c","_put_8tap_regular_32h_c","_put_8tap_sharp_32h_c","_put_bilin_32h_c","_put_8tap_smooth_16h_c","_put_8tap_regular_16h_c","_put_8tap_sharp_16h_c","_put_bilin_16h_c","_put_8tap_smooth_8h_c","_put_8tap_regular_8h_c","_put_8tap_sharp_8h_c","_put_bilin_8h_c","_put_8tap_smooth_4h_c","_put_8tap_regular_4h_c","_put_8tap_sharp_4h_c","_put_bilin_4h_c","_avg_8tap_smooth_64hv_c","_avg_8tap_regular_64hv_c","_avg_8tap_sharp_64hv_c","_avg_bilin_64hv_c","_avg_8tap_smooth_32hv_c","_avg_8tap_regular_32hv_c","_avg_8tap_sharp_32hv_c","_avg_bilin_32hv_c","_avg_8tap_smooth_16hv_c","_avg_8tap_regular_16hv_c","_avg_8tap_sharp_16hv_c","_avg_bilin_16hv_c","_avg_8tap_smooth_8hv_c","_avg_8tap_regular_8hv_c","_avg_8tap_sharp_8hv_c","_avg_bilin_8hv_c","_avg_8tap_smooth_4hv_c","_avg_8tap_regular_4hv_c","_avg_8tap_sharp_4hv_c","_avg_bilin_4hv_c","_avg_8tap_smooth_64v_c","_avg_8tap_regular_64v_c","_avg_8tap_sharp_64v_c","_avg_bilin_64v_c","_avg_8tap_smooth_32v_c","_avg_8tap_regular_32v_c","_avg_8tap_sharp_32v_c","_avg_bilin_32v_c","_avg_8tap_smooth_16v_c","_avg_8tap_regular_16v_c","_avg_8tap_sharp_16v_c","_avg_bilin_16v_c","_avg_8tap_smooth_8v_c","_avg_8tap_regular_8v_c","_avg_8tap_sharp_8v_c","_avg_bilin_8v_c","_avg_8tap_smooth_4v_c","_avg_8tap_regular_4v_c","_avg_8tap_sharp_4v_c","_avg_bilin_4v_c","_avg_8tap_smooth_64h_c","_avg_8tap_regular_64h_c","_avg_8tap_sharp_64h_c","_avg_bilin_64h_c","_avg_8tap_smooth_32h_c","_avg_8tap_regular_32h_c","_avg_8tap_sharp_32h_c","_avg_bilin_32h_c","_avg_8tap_smooth_16h_c","_avg_8tap_regular_16h_c","_avg_8tap_sharp_16h_c","_avg_bilin_16h_c","_avg_8tap_smooth_8h_c","_avg_8tap_regular_8h_c","_avg_8tap_sharp_8h_c","_avg_bilin_8h_c","_avg_8tap_smooth_4h_c","_avg_8tap_regular_4h_c","_avg_8tap_sharp_4h_c","_avg_bilin_4h_c","_copy64_c_7053","_avg64_c_7054","_copy32_c_7055","_avg32_c_7056","_copy16_c_7057","_avg16_c_7058","_copy8_c_7059","_avg8_c_7060","_copy4_c_7061","_avg4_c_7062","_put_8tap_smooth_64hv_c_7063","_put_8tap_regular_64hv_c_7064","_put_8tap_sharp_64hv_c_7065","_put_bilin_64hv_c_7066","_put_8tap_smooth_32hv_c_7067","_put_8tap_regular_32hv_c_7068","_put_8tap_sharp_32hv_c_7069","_put_bilin_32hv_c_7070","_put_8tap_smooth_16hv_c_7071","_put_8tap_regular_16hv_c_7072","_put_8tap_sharp_16hv_c_7073","_put_bilin_16hv_c_7074","_put_8tap_smooth_8hv_c_7075","_put_8tap_regular_8hv_c_7076","_put_8tap_sharp_8hv_c_7077","_put_bilin_8hv_c_7078","_put_8tap_smooth_4hv_c_7079","_put_8tap_regular_4hv_c_7080","_put_8tap_sharp_4hv_c_7081","_put_bilin_4hv_c_7082","_put_8tap_smooth_64v_c_7083","_put_8tap_regular_64v_c_7084","_put_8tap_sharp_64v_c_7085","_put_bilin_64v_c_7086","_put_8tap_smooth_32v_c_7087","_put_8tap_regular_32v_c_7088","_put_8tap_sharp_32v_c_7089","_put_bilin_32v_c_7090","_put_8tap_smooth_16v_c_7091","_put_8tap_regular_16v_c_7092","_put_8tap_sharp_16v_c_7093","_put_bilin_16v_c_7094","_put_8tap_smooth_8v_c_7095","_put_8tap_regular_8v_c_7096","_put_8tap_sharp_8v_c_7097","_put_bilin_8v_c_7098","_put_8tap_smooth_4v_c_7099","_put_8tap_regular_4v_c_7100","_put_8tap_sharp_4v_c_7101","_put_bilin_4v_c_7102","_put_8tap_smooth_64h_c_7103","_put_8tap_regular_64h_c_7104","_put_8tap_sharp_64h_c_7105","_put_bilin_64h_c_7106","_put_8tap_smooth_32h_c_7107","_put_8tap_regular_32h_c_7108","_put_8tap_sharp_32h_c_7109","_put_bilin_32h_c_7110","_put_8tap_smooth_16h_c_7111","_put_8tap_regular_16h_c_7112","_put_8tap_sharp_16h_c_7113","_put_bilin_16h_c_7114","_put_8tap_smooth_8h_c_7115","_put_8tap_regular_8h_c_7116","_put_8tap_sharp_8h_c_7117","_put_bilin_8h_c_7118","_put_8tap_smooth_4h_c_7119","_put_8tap_regular_4h_c_7120","_put_8tap_sharp_4h_c_7121","_put_bilin_4h_c_7122","_avg_8tap_smooth_64hv_c_7123","_avg_8tap_regular_64hv_c_7124","_avg_8tap_sharp_64hv_c_7125","_avg_bilin_64hv_c_7126","_avg_8tap_smooth_32hv_c_7127","_avg_8tap_regular_32hv_c_7128","_avg_8tap_sharp_32hv_c_7129","_avg_bilin_32hv_c_7130","_avg_8tap_smooth_16hv_c_7131","_avg_8tap_regular_16hv_c_7132","_avg_8tap_sharp_16hv_c_7133","_avg_bilin_16hv_c_7134","_avg_8tap_smooth_8hv_c_7135","_avg_8tap_regular_8hv_c_7136","_avg_8tap_sharp_8hv_c_7137","_avg_bilin_8hv_c_7138","_avg_8tap_smooth_4hv_c_7139","_avg_8tap_regular_4hv_c_7140","_avg_8tap_sharp_4hv_c_7141","_avg_bilin_4hv_c_7142","_avg_8tap_smooth_64v_c_7143","_avg_8tap_regular_64v_c_7144","_avg_8tap_sharp_64v_c_7145","_avg_bilin_64v_c_7146","_avg_8tap_smooth_32v_c_7147","_avg_8tap_regular_32v_c_7148","_avg_8tap_sharp_32v_c_7149","_avg_bilin_32v_c_7150","_avg_8tap_smooth_16v_c_7151","_avg_8tap_regular_16v_c_7152","_avg_8tap_sharp_16v_c_7153","_avg_bilin_16v_c_7154","_avg_8tap_smooth_8v_c_7155","_avg_8tap_regular_8v_c_7156","_avg_8tap_sharp_8v_c_7157","_avg_bilin_8v_c_7158","_avg_8tap_smooth_4v_c_7159","_avg_8tap_regular_4v_c_7160","_avg_8tap_sharp_4v_c_7161","_avg_bilin_4v_c_7162","_avg_8tap_smooth_64h_c_7163","_avg_8tap_regular_64h_c_7164","_avg_8tap_sharp_64h_c_7165","_avg_bilin_64h_c_7166","_avg_8tap_smooth_32h_c_7167","_avg_8tap_regular_32h_c_7168","_avg_8tap_sharp_32h_c_7169","_avg_bilin_32h_c_7170","_avg_8tap_smooth_16h_c_7171","_avg_8tap_regular_16h_c_7172","_avg_8tap_sharp_16h_c_7173","_avg_bilin_16h_c_7174","_avg_8tap_smooth_8h_c_7175","_avg_8tap_regular_8h_c_7176","_avg_8tap_sharp_8h_c_7177","_avg_bilin_8h_c_7178","_avg_8tap_smooth_4h_c_7179","_avg_8tap_regular_4h_c_7180","_avg_8tap_sharp_4h_c_7181","_avg_bilin_4h_c_7182","_put_vp8_pixels16_c","_put_vp8_epel16_h4_c","_put_vp8_epel16_h6_c","_put_vp8_epel16_v4_c","_put_vp8_epel16_h4v4_c","_put_vp8_epel16_h6v4_c","_put_vp8_epel16_v6_c","_put_vp8_epel16_h4v6_c","_put_vp8_epel16_h6v6_c","_put_vp8_pixels8_c","_put_vp8_epel8_h4_c","_put_vp8_epel8_h6_c","_put_vp8_epel8_v4_c","_put_vp8_epel8_h4v4_c","_put_vp8_epel8_h6v4_c","_put_vp8_epel8_v6_c","_put_vp8_epel8_h4v6_c","_put_vp8_epel8_h6v6_c","_put_vp8_pixels4_c","_put_vp8_epel4_h4_c","_put_vp8_epel4_h6_c","_put_vp8_epel4_v4_c","_put_vp8_epel4_h4v4_c","_put_vp8_epel4_h6v4_c","_put_vp8_epel4_v6_c","_put_vp8_epel4_h4v6_c","_put_vp8_epel4_h6v6_c","_put_vp8_bilinear16_h_c","_put_vp8_bilinear16_v_c","_put_vp8_bilinear16_hv_c","_put_vp8_bilinear8_h_c","_put_vp8_bilinear8_v_c","_put_vp8_bilinear8_hv_c","_put_vp8_bilinear4_h_c","_put_vp8_bilinear4_v_c","_put_vp8_bilinear4_hv_c","_sao_edge_filter_9","_put_hevc_pel_pixels_9","_put_hevc_qpel_h_9","_put_hevc_qpel_v_9","_put_hevc_qpel_hv_9","_put_hevc_epel_h_9","_put_hevc_epel_v_9","_put_hevc_epel_hv_9","_sao_edge_filter_10","_put_hevc_pel_pixels_10","_put_hevc_qpel_h_10","_put_hevc_qpel_v_10","_put_hevc_qpel_hv_10","_put_hevc_epel_h_10","_put_hevc_epel_v_10","_put_hevc_epel_hv_10","_sao_edge_filter_12","_put_hevc_pel_pixels_12","_put_hevc_qpel_h_12","_put_hevc_qpel_v_12","_put_hevc_qpel_hv_12","_put_hevc_epel_h_12","_put_hevc_epel_v_12","_put_hevc_epel_hv_12","_sao_edge_filter_8","_put_hevc_pel_pixels_8","_put_hevc_qpel_h_8","_put_hevc_qpel_v_8","_put_hevc_qpel_hv_8","_put_hevc_epel_h_8","_put_hevc_epel_v_8","_put_hevc_epel_hv_8","_hScale8To15_c","_hScale8To19_c","_hScale16To15_c","_hScale16To19_c","_yuv2p010lX_BE_c","_yuv2p010lX_LE_c","_yuv2p010cX_c","_yuv2planeX_16BE_c","_yuv2planeX_16LE_c","_yuv2p016cX_c","_yuv2planeX_9BE_c","_yuv2planeX_9LE_c","_yuv2planeX_10BE_c","_yuv2planeX_10LE_c","_yuv2planeX_12BE_c","_yuv2planeX_12LE_c","_yuv2planeX_14BE_c","_yuv2planeX_14LE_c","_yuv2planeX_floatBE_c","_yuv2planeX_floatLE_c","_yuv2planeX_8_c","_yuv2nv12cX_c","_yuy2ToUV_c","_yvy2ToUV_c","_uyvyToUV_c","_nv12ToUV_c","_nv21ToUV_c","_palToUV_c","_bswap16UV_c","_read_ayuv64le_UV_c","_p010LEToUV_c","_p010BEToUV_c","_p016LEToUV_c","_p016BEToUV_c","_gbr24pToUV_half_c","_rgb64BEToUV_half_c","_rgb64LEToUV_half_c","_bgr64BEToUV_half_c","_bgr64LEToUV_half_c","_rgb48BEToUV_half_c","_rgb48LEToUV_half_c","_bgr48BEToUV_half_c","_bgr48LEToUV_half_c","_bgr32ToUV_half_c","_bgr321ToUV_half_c","_bgr24ToUV_half_c","_bgr16leToUV_half_c","_bgr16beToUV_half_c","_bgr15leToUV_half_c","_bgr15beToUV_half_c","_bgr12leToUV_half_c","_bgr12beToUV_half_c","_rgb32ToUV_half_c","_rgb321ToUV_half_c","_rgb24ToUV_half_c","_rgb16leToUV_half_c","_rgb16beToUV_half_c","_rgb15leToUV_half_c","_rgb15beToUV_half_c","_rgb12leToUV_half_c","_rgb12beToUV_half_c","_rgb64BEToUV_c","_rgb64LEToUV_c","_bgr64BEToUV_c","_bgr64LEToUV_c","_rgb48BEToUV_c","_rgb48LEToUV_c","_bgr48BEToUV_c","_bgr48LEToUV_c","_bgr32ToUV_c","_bgr321ToUV_c","_bgr24ToUV_c","_bgr16leToUV_c","_bgr16beToUV_c","_bgr15leToUV_c","_bgr15beToUV_c","_bgr12leToUV_c","_bgr12beToUV_c","_rgb32ToUV_c","_rgb321ToUV_c","_rgb24ToUV_c","_rgb16leToUV_c","_rgb16beToUV_c","_rgb15leToUV_c","_rgb15beToUV_c","_rgb12leToUV_c","_rgb12beToUV_c"];var debug_table_viiiiiiii=["0","_ac3_bit_alloc_calc_bap_c","_sao_band_filter_9","_put_hevc_pel_uni_pixels_9","_put_hevc_qpel_uni_h_9","_put_hevc_qpel_uni_v_9","_put_hevc_qpel_uni_hv_9","_put_hevc_epel_uni_h_9","_put_hevc_epel_uni_v_9","_put_hevc_epel_uni_hv_9","_sao_band_filter_10","_put_hevc_pel_uni_pixels_10","_put_hevc_qpel_uni_h_10","_put_hevc_qpel_uni_v_10","_put_hevc_qpel_uni_hv_10","_put_hevc_epel_uni_h_10","_put_hevc_epel_uni_v_10","_put_hevc_epel_uni_hv_10","_sao_band_filter_12","_put_hevc_pel_uni_pixels_12","_put_hevc_qpel_uni_h_12","_put_hevc_qpel_uni_v_12","_put_hevc_qpel_uni_hv_12","_put_hevc_epel_uni_h_12","_put_hevc_epel_uni_v_12","_put_hevc_epel_uni_hv_12","_sao_band_filter_8","_put_hevc_pel_uni_pixels_8","_put_hevc_qpel_uni_h_8","_put_hevc_qpel_uni_v_8","_put_hevc_qpel_uni_hv_8","_put_hevc_epel_uni_h_8","_put_hevc_epel_uni_v_8","_put_hevc_epel_uni_hv_8","_biweight_h264_pixels16_9_c","_biweight_h264_pixels8_9_c","_biweight_h264_pixels4_9_c","_biweight_h264_pixels2_9_c","_biweight_h264_pixels16_10_c","_biweight_h264_pixels8_10_c","_biweight_h264_pixels4_10_c","_biweight_h264_pixels2_10_c","_biweight_h264_pixels16_12_c","_biweight_h264_pixels8_12_c","_biweight_h264_pixels4_12_c","_biweight_h264_pixels2_12_c","_biweight_h264_pixels16_14_c","_biweight_h264_pixels8_14_c","_biweight_h264_pixels4_14_c","_biweight_h264_pixels2_14_c","_biweight_h264_pixels16_8_c","_biweight_h264_pixels8_8_c","_biweight_h264_pixels4_8_c","_biweight_h264_pixels2_8_c","_ff_hcscale_fast_c","_bayer_bggr8_to_yv12_copy","_bayer_bggr8_to_yv12_interpolate","_bayer_bggr16le_to_yv12_copy","_bayer_bggr16le_to_yv12_interpolate","_bayer_bggr16be_to_yv12_copy","_bayer_bggr16be_to_yv12_interpolate","_bayer_rggb8_to_yv12_copy","_bayer_rggb8_to_yv12_interpolate","_bayer_rggb16le_to_yv12_copy","_bayer_rggb16le_to_yv12_interpolate","_bayer_rggb16be_to_yv12_copy","_bayer_rggb16be_to_yv12_interpolate","_bayer_gbrg8_to_yv12_copy","_bayer_gbrg8_to_yv12_interpolate","_bayer_gbrg16le_to_yv12_copy","_bayer_gbrg16le_to_yv12_interpolate","_bayer_gbrg16be_to_yv12_copy","_bayer_gbrg16be_to_yv12_interpolate","_bayer_grbg8_to_yv12_copy","_bayer_grbg8_to_yv12_interpolate","_bayer_grbg16le_to_yv12_copy","_bayer_grbg16le_to_yv12_interpolate","_bayer_grbg16be_to_yv12_copy","_bayer_grbg16be_to_yv12_interpolate","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiiiiiii=["0","_mpeg_er_decode_mb","_put_scaled_smooth_64_c_6831","_put_scaled_regular_64_c_6832","_put_scaled_sharp_64_c_6833","_avg_scaled_smooth_64_c_6834","_avg_scaled_regular_64_c_6835","_avg_scaled_sharp_64_c_6836","_put_scaled_smooth_32_c_6837","_put_scaled_regular_32_c_6838","_put_scaled_sharp_32_c_6839","_avg_scaled_smooth_32_c_6840","_avg_scaled_regular_32_c_6841","_avg_scaled_sharp_32_c_6842","_put_scaled_smooth_16_c_6843","_put_scaled_regular_16_c_6844","_put_scaled_sharp_16_c_6845","_avg_scaled_smooth_16_c_6846","_avg_scaled_regular_16_c_6847","_avg_scaled_sharp_16_c_6848","_put_scaled_smooth_8_c_6849","_put_scaled_regular_8_c_6850","_put_scaled_sharp_8_c_6851","_avg_scaled_smooth_8_c_6852","_avg_scaled_regular_8_c_6853","_avg_scaled_sharp_8_c_6854","_put_scaled_smooth_4_c_6855","_put_scaled_regular_4_c_6856","_put_scaled_sharp_4_c_6857","_avg_scaled_smooth_4_c_6858","_avg_scaled_regular_4_c_6859","_avg_scaled_sharp_4_c_6860","_put_scaled_smooth_64_c","_put_scaled_regular_64_c","_put_scaled_sharp_64_c","_put_scaled_bilin_64_c","_avg_scaled_smooth_64_c","_avg_scaled_regular_64_c","_avg_scaled_sharp_64_c","_avg_scaled_bilin_64_c","_put_scaled_smooth_32_c","_put_scaled_regular_32_c","_put_scaled_sharp_32_c","_put_scaled_bilin_32_c","_avg_scaled_smooth_32_c","_avg_scaled_regular_32_c","_avg_scaled_sharp_32_c","_avg_scaled_bilin_32_c","_put_scaled_smooth_16_c","_put_scaled_regular_16_c","_put_scaled_sharp_16_c","_put_scaled_bilin_16_c","_avg_scaled_smooth_16_c","_avg_scaled_regular_16_c","_avg_scaled_sharp_16_c","_avg_scaled_bilin_16_c","_put_scaled_smooth_8_c","_put_scaled_regular_8_c","_put_scaled_sharp_8_c","_put_scaled_bilin_8_c","_avg_scaled_smooth_8_c","_avg_scaled_regular_8_c","_avg_scaled_sharp_8_c","_avg_scaled_bilin_8_c","_put_scaled_smooth_4_c","_put_scaled_regular_4_c","_put_scaled_sharp_4_c","_put_scaled_bilin_4_c","_avg_scaled_smooth_4_c","_avg_scaled_regular_4_c","_avg_scaled_sharp_4_c","_avg_scaled_bilin_4_c","_put_scaled_smooth_64_c_7009","_put_scaled_regular_64_c_7010","_put_scaled_sharp_64_c_7011","_put_scaled_bilin_64_c_7012","_avg_scaled_smooth_64_c_7013","_avg_scaled_regular_64_c_7014","_avg_scaled_sharp_64_c_7015","_avg_scaled_bilin_64_c_7016","_put_scaled_smooth_32_c_7017","_put_scaled_regular_32_c_7018","_put_scaled_sharp_32_c_7019","_put_scaled_bilin_32_c_7020","_avg_scaled_smooth_32_c_7021","_avg_scaled_regular_32_c_7022","_avg_scaled_sharp_32_c_7023","_avg_scaled_bilin_32_c_7024","_put_scaled_smooth_16_c_7025","_put_scaled_regular_16_c_7026","_put_scaled_sharp_16_c_7027","_put_scaled_bilin_16_c_7028","_avg_scaled_smooth_16_c_7029","_avg_scaled_regular_16_c_7030","_avg_scaled_sharp_16_c_7031","_avg_scaled_bilin_16_c_7032","_put_scaled_smooth_8_c_7033","_put_scaled_regular_8_c_7034","_put_scaled_sharp_8_c_7035","_put_scaled_bilin_8_c_7036","_avg_scaled_smooth_8_c_7037","_avg_scaled_regular_8_c_7038","_avg_scaled_sharp_8_c_7039","_avg_scaled_bilin_8_c_7040","_put_scaled_smooth_4_c_7041","_put_scaled_regular_4_c_7042","_put_scaled_sharp_4_c_7043","_put_scaled_bilin_4_c_7044","_avg_scaled_smooth_4_c_7045","_avg_scaled_regular_4_c_7046","_avg_scaled_sharp_4_c_7047","_avg_scaled_bilin_4_c_7048","_put_hevc_pel_bi_pixels_9","_put_hevc_qpel_bi_h_9","_put_hevc_qpel_bi_v_9","_put_hevc_qpel_bi_hv_9","_put_hevc_epel_bi_h_9","_put_hevc_epel_bi_v_9","_put_hevc_epel_bi_hv_9","_put_hevc_pel_bi_pixels_10","_put_hevc_qpel_bi_h_10","_put_hevc_qpel_bi_v_10","_put_hevc_qpel_bi_hv_10","_put_hevc_epel_bi_h_10","_put_hevc_epel_bi_v_10","_put_hevc_epel_bi_hv_10","_put_hevc_pel_bi_pixels_12","_put_hevc_qpel_bi_h_12","_put_hevc_qpel_bi_v_12","_put_hevc_qpel_bi_hv_12","_put_hevc_epel_bi_h_12","_put_hevc_epel_bi_v_12","_put_hevc_epel_bi_hv_12","_put_hevc_pel_bi_pixels_8","_put_hevc_qpel_bi_h_8","_put_hevc_qpel_bi_v_8","_put_hevc_qpel_bi_hv_8","_put_hevc_epel_bi_h_8","_put_hevc_epel_bi_v_8","_put_hevc_epel_bi_hv_8","_h264_er_decode_mb","_yuv2rgba32_full_1_c","_yuv2rgbx32_full_1_c","_yuv2argb32_full_1_c","_yuv2xrgb32_full_1_c","_yuv2bgra32_full_1_c","_yuv2bgrx32_full_1_c","_yuv2abgr32_full_1_c","_yuv2xbgr32_full_1_c","_yuv2rgba64le_full_1_c","_yuv2rgbx64le_full_1_c","_yuv2rgba64be_full_1_c","_yuv2rgbx64be_full_1_c","_yuv2bgra64le_full_1_c","_yuv2bgrx64le_full_1_c","_yuv2bgra64be_full_1_c","_yuv2bgrx64be_full_1_c","_yuv2rgb24_full_1_c","_yuv2bgr24_full_1_c","_yuv2rgb48le_full_1_c","_yuv2bgr48le_full_1_c","_yuv2rgb48be_full_1_c","_yuv2bgr48be_full_1_c","_yuv2bgr4_byte_full_1_c","_yuv2rgb4_byte_full_1_c","_yuv2bgr8_full_1_c","_yuv2rgb8_full_1_c","_yuv2rgba64le_1_c","_yuv2rgbx64le_1_c","_yuv2rgba64be_1_c","_yuv2rgbx64be_1_c","_yuv2bgra64le_1_c","_yuv2bgrx64le_1_c","_yuv2bgra64be_1_c","_yuv2bgrx64be_1_c","_yuv2rgb48le_1_c","_yuv2rgb48be_1_c","_yuv2bgr48le_1_c","_yuv2bgr48be_1_c","_yuv2rgba32_1_c","_yuv2rgbx32_1_c","_yuv2rgba32_1_1_c","_yuv2rgbx32_1_1_c","_yuv2rgb24_1_c","_yuv2bgr24_1_c","_yuv2rgb16_1_c","_yuv2rgb15_1_c","_yuv2rgb12_1_c","_yuv2rgb8_1_c","_yuv2rgb4_1_c","_yuv2rgb4b_1_c","_yuv2monowhite_1_c","_yuv2monoblack_1_c","_yuv2yuyv422_1_c","_yuv2yvyu422_1_c","_yuv2uyvy422_1_c","_yuv2ya8_1_c","_yuy2toyv12_c","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiiiiiiii=["0","_ff_emulated_edge_mc_16","_ff_emulated_edge_mc_8","_yuv2rgba32_full_2_c","_yuv2rgbx32_full_2_c","_yuv2argb32_full_2_c","_yuv2xrgb32_full_2_c","_yuv2bgra32_full_2_c","_yuv2bgrx32_full_2_c","_yuv2abgr32_full_2_c","_yuv2xbgr32_full_2_c","_yuv2rgba64le_full_2_c","_yuv2rgbx64le_full_2_c","_yuv2rgba64be_full_2_c","_yuv2rgbx64be_full_2_c","_yuv2bgra64le_full_2_c","_yuv2bgrx64le_full_2_c","_yuv2bgra64be_full_2_c","_yuv2bgrx64be_full_2_c","_yuv2rgb24_full_2_c","_yuv2bgr24_full_2_c","_yuv2rgb48le_full_2_c","_yuv2bgr48le_full_2_c","_yuv2rgb48be_full_2_c","_yuv2bgr48be_full_2_c","_yuv2bgr4_byte_full_2_c","_yuv2rgb4_byte_full_2_c","_yuv2bgr8_full_2_c","_yuv2rgb8_full_2_c","_yuv2rgba64le_2_c","_yuv2rgbx64le_2_c","_yuv2rgba64be_2_c","_yuv2rgbx64be_2_c","_yuv2bgra64le_2_c","_yuv2bgrx64le_2_c","_yuv2bgra64be_2_c","_yuv2bgrx64be_2_c","_yuv2rgb48le_2_c","_yuv2rgb48be_2_c","_yuv2bgr48le_2_c","_yuv2bgr48be_2_c","_yuv2rgba32_2_c","_yuv2rgbx32_2_c","_yuv2rgba32_1_2_c","_yuv2rgbx32_1_2_c","_yuv2rgb24_2_c","_yuv2bgr24_2_c","_yuv2rgb16_2_c","_yuv2rgb15_2_c","_yuv2rgb12_2_c","_yuv2rgb8_2_c","_yuv2rgb4_2_c","_yuv2rgb4b_2_c","_yuv2monowhite_2_c","_yuv2monoblack_2_c","_yuv2yuyv422_2_c","_yuv2yvyu422_2_c","_yuv2uyvy422_2_c","_yuv2ya8_2_c","_vu9_to_vu12_c","_yvu9_to_yuy2_c","0","0","0"];var debug_table_viiiiiiiiiii=["0","_put_hevc_pel_uni_w_pixels_9","_put_hevc_qpel_uni_w_h_9","_put_hevc_qpel_uni_w_v_9","_put_hevc_qpel_uni_w_hv_9","_put_hevc_epel_uni_w_h_9","_put_hevc_epel_uni_w_v_9","_put_hevc_epel_uni_w_hv_9","_put_hevc_pel_uni_w_pixels_10","_put_hevc_qpel_uni_w_h_10","_put_hevc_qpel_uni_w_v_10","_put_hevc_qpel_uni_w_hv_10","_put_hevc_epel_uni_w_h_10","_put_hevc_epel_uni_w_v_10","_put_hevc_epel_uni_w_hv_10","_put_hevc_pel_uni_w_pixels_12","_put_hevc_qpel_uni_w_h_12","_put_hevc_qpel_uni_w_v_12","_put_hevc_qpel_uni_w_hv_12","_put_hevc_epel_uni_w_h_12","_put_hevc_epel_uni_w_v_12","_put_hevc_epel_uni_w_hv_12","_put_hevc_pel_uni_w_pixels_8","_put_hevc_qpel_uni_w_h_8","_put_hevc_qpel_uni_w_v_8","_put_hevc_qpel_uni_w_hv_8","_put_hevc_epel_uni_w_h_8","_put_hevc_epel_uni_w_v_8","_put_hevc_epel_uni_w_hv_8","0","0","0"];var debug_table_viiiiiiiiiiii=["0","_sao_edge_restore_0_9","_sao_edge_restore_1_9","_sao_edge_restore_0_10","_sao_edge_restore_1_10","_sao_edge_restore_0_12","_sao_edge_restore_1_12","_sao_edge_restore_0_8","_sao_edge_restore_1_8","_yuv2rgba32_full_X_c","_yuv2rgbx32_full_X_c","_yuv2argb32_full_X_c","_yuv2xrgb32_full_X_c","_yuv2bgra32_full_X_c","_yuv2bgrx32_full_X_c","_yuv2abgr32_full_X_c","_yuv2xbgr32_full_X_c","_yuv2rgba64le_full_X_c","_yuv2rgbx64le_full_X_c","_yuv2rgba64be_full_X_c","_yuv2rgbx64be_full_X_c","_yuv2bgra64le_full_X_c","_yuv2bgrx64le_full_X_c","_yuv2bgra64be_full_X_c","_yuv2bgrx64be_full_X_c","_yuv2rgb24_full_X_c","_yuv2bgr24_full_X_c","_yuv2rgb48le_full_X_c","_yuv2bgr48le_full_X_c","_yuv2rgb48be_full_X_c","_yuv2bgr48be_full_X_c","_yuv2bgr4_byte_full_X_c","_yuv2rgb4_byte_full_X_c","_yuv2bgr8_full_X_c","_yuv2rgb8_full_X_c","_yuv2gbrp_full_X_c","_yuv2gbrp16_full_X_c","_yuv2rgba64le_X_c","_yuv2rgbx64le_X_c","_yuv2rgba64be_X_c","_yuv2rgbx64be_X_c","_yuv2bgra64le_X_c","_yuv2bgrx64le_X_c","_yuv2bgra64be_X_c","_yuv2bgrx64be_X_c","_yuv2rgb48le_X_c","_yuv2rgb48be_X_c","_yuv2bgr48le_X_c","_yuv2bgr48be_X_c","_yuv2rgba32_X_c","_yuv2rgbx32_X_c","_yuv2rgba32_1_X_c","_yuv2rgbx32_1_X_c","_yuv2rgb24_X_c","_yuv2bgr24_X_c","_yuv2rgb16_X_c","_yuv2rgb15_X_c","_yuv2rgb12_X_c","_yuv2rgb8_X_c","_yuv2rgb4_X_c","_yuv2rgb4b_X_c","_yuv2monowhite_X_c","_yuv2monoblack_X_c","_yuv2yuyv422_X_c","_yuv2yvyu422_X_c","_yuv2uyvy422_X_c","_yuv2ya8_X_c","_yuv2ayuv64le_X_c","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"];var debug_table_viiiiiiiiiiiiii=["0","_ff_gmc_c","_put_hevc_pel_bi_w_pixels_9","_put_hevc_qpel_bi_w_h_9","_put_hevc_qpel_bi_w_v_9","_put_hevc_qpel_bi_w_hv_9","_put_hevc_epel_bi_w_h_9","_put_hevc_epel_bi_w_v_9","_put_hevc_epel_bi_w_hv_9","_put_hevc_pel_bi_w_pixels_10","_put_hevc_qpel_bi_w_h_10","_put_hevc_qpel_bi_w_v_10","_put_hevc_qpel_bi_w_hv_10","_put_hevc_epel_bi_w_h_10","_put_hevc_epel_bi_w_v_10","_put_hevc_epel_bi_w_hv_10","_put_hevc_pel_bi_w_pixels_12","_put_hevc_qpel_bi_w_h_12","_put_hevc_qpel_bi_w_v_12","_put_hevc_qpel_bi_w_hv_12","_put_hevc_epel_bi_w_h_12","_put_hevc_epel_bi_w_v_12","_put_hevc_epel_bi_w_hv_12","_put_hevc_pel_bi_w_pixels_8","_put_hevc_qpel_bi_w_h_8","_put_hevc_qpel_bi_w_v_8","_put_hevc_qpel_bi_w_hv_8","_put_hevc_epel_bi_w_h_8","_put_hevc_epel_bi_w_v_8","_put_hevc_epel_bi_w_hv_8","0","0"];var debug_table_viiijj=["0","_resample_one_int16","_resample_one_int32","_resample_one_float","_resample_one_double","0","0","0"];function nullFunc_dd(x){err("Invalid function pointer '"+x+"' called with signature 'dd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: did: "+debug_table_did[x]+"  didd: "+debug_table_didd[x]+"  v: "+debug_table_v[x]+"  ii: "+debug_table_ii[x]+"  vi: "+debug_table_vi[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  jii: "+debug_table_jii[x]+"  jij: "+debug_table_jij[x]+"  vii: "+debug_table_vii[x]+"  viidi: "+debug_table_viidi[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  viii: "+debug_table_viii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_did(x){err("Invalid function pointer '"+x+"' called with signature 'did'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  ii: "+debug_table_ii[x]+"  vi: "+debug_table_vi[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  jii: "+debug_table_jii[x]+"  jij: "+debug_table_jij[x]+"  vii: "+debug_table_vii[x]+"  viidi: "+debug_table_viidi[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  viii: "+debug_table_viii[x]+"  v: "+debug_table_v[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_didd(x){err("Invalid function pointer '"+x+"' called with signature 'didd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: did: "+debug_table_did[x]+"  dd: "+debug_table_dd[x]+"  ii: "+debug_table_ii[x]+"  vi: "+debug_table_vi[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  jii: "+debug_table_jii[x]+"  jij: "+debug_table_jij[x]+"  vii: "+debug_table_vii[x]+"  viidi: "+debug_table_viidi[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  viii: "+debug_table_viii[x]+"  v: "+debug_table_v[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_fii(x){err("Invalid function pointer '"+x+"' called with signature 'fii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: fiii: "+debug_table_fiii[x]+"  fiiii: "+debug_table_fiiii[x]+"  ii: "+debug_table_ii[x]+"  iii: "+debug_table_iii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  iiii: "+debug_table_iiii[x]+"  viii: "+debug_table_viii[x]+"  jiji: "+debug_table_jiji[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  v: "+debug_table_v[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_fiii(x){err("Invalid function pointer '"+x+"' called with signature 'fiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: fii: "+debug_table_fii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiii: "+debug_table_iiii[x]+"  viii: "+debug_table_viii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  jiji: "+debug_table_jiji[x]+"  iiiii: "+debug_table_iiiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  viiii: "+debug_table_viiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  v: "+debug_table_v[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_fiiii(x){err("Invalid function pointer '"+x+"' called with signature 'fiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: fiii: "+debug_table_fiii[x]+"  fii: "+debug_table_fii[x]+"  iiii: "+debug_table_iiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiiii: "+debug_table_iiiii[x]+"  viiii: "+debug_table_viiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viii: "+debug_table_viii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  vi: "+debug_table_vi[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  viiijj: "+debug_table_viiijj[x]+"  didd: "+debug_table_didd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  dd: "+debug_table_dd[x]+"  v: "+debug_table_v[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_ii(x){err("Invalid function pointer '"+x+"' called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iii: "+debug_table_iii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  fiii: "+debug_table_fiii[x]+"  jiji: "+debug_table_jiji[x]+"  viii: "+debug_table_viii[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  v: "+debug_table_v[x]+"  dd: "+debug_table_dd[x]+"  fiiii: "+debug_table_fiiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  didd: "+debug_table_didd[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iii(x){err("Invalid function pointer '"+x+"' called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: ii: "+debug_table_ii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  fiiii: "+debug_table_fiiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  jiji: "+debug_table_jiji[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  v: "+debug_table_v[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  jiji: "+debug_table_jiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  viiiii: "+debug_table_viiiii[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  viiijj: "+debug_table_viiijj[x]+"  didd: "+debug_table_didd[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dd: "+debug_table_dd[x]+"  v: "+debug_table_v[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  vi: "+debug_table_vi[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  viiijj: "+debug_table_viiijj[x]+"  didd: "+debug_table_didd[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  dd: "+debug_table_dd[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  jiji: "+debug_table_jiji[x]+"  vi: "+debug_table_vi[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  jiji: "+debug_table_jiji[x]+"  vi: "+debug_table_vi[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiiidiiddii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiidiiddii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  didd: "+debug_table_didd[x]+"  did: "+debug_table_did[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  viidi: "+debug_table_viidi[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viifi: "+debug_table_viifi[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  dd: "+debug_table_dd[x]+"  viiijj: "+debug_table_viiijj[x]+"  jij: "+debug_table_jij[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_iiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  didd: "+debug_table_didd[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  dd: "+debug_table_dd[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  ");abort(x)}function nullFunc_iiiiiiiiiiiiiifii(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiiiiiiiiiiifii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  viifi: "+debug_table_viifi[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  fii: "+debug_table_fii[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  didd: "+debug_table_didd[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  dd: "+debug_table_dd[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  v: "+debug_table_v[x]+"  ");abort(x)}function nullFunc_iiiiij(x){err("Invalid function pointer '"+x+"' called with signature 'iiiiij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  jij: "+debug_table_jij[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiji: "+debug_table_jiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  vi: "+debug_table_vi[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  did: "+debug_table_did[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  didd: "+debug_table_didd[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  dd: "+debug_table_dd[x]+"  v: "+debug_table_v[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_iiiji(x){err("Invalid function pointer '"+x+"' called with signature 'iiiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  jiiji: "+debug_table_jiiji[x]+"  fiiii: "+debug_table_fiiii[x]+"  viiii: "+debug_table_viiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  jiji: "+debug_table_jiji[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  jij: "+debug_table_jij[x]+"  ijiii: "+debug_table_ijiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  vi: "+debug_table_vi[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  did: "+debug_table_did[x]+"  didd: "+debug_table_didd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dd: "+debug_table_dd[x]+"  v: "+debug_table_v[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_iiijjji(x){err("Invalid function pointer '"+x+"' called with signature 'iiijjji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiii: "+debug_table_iiiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  fiiii: "+debug_table_fiiii[x]+"  viiii: "+debug_table_viiii[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  viiijj: "+debug_table_viiijj[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  vii: "+debug_table_vii[x]+"  jij: "+debug_table_jij[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  ijiii: "+debug_table_ijiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  jiji: "+debug_table_jiji[x]+"  vi: "+debug_table_vi[x]+"  did: "+debug_table_did[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_ijiii(x){err("Invalid function pointer '"+x+"' called with signature 'ijiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: iii: "+debug_table_iii[x]+"  jii: "+debug_table_jii[x]+"  ii: "+debug_table_ii[x]+"  iiii: "+debug_table_iiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  fiii: "+debug_table_fiii[x]+"  viii: "+debug_table_viii[x]+"  jiji: "+debug_table_jiji[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  jij: "+debug_table_jij[x]+"  iiiii: "+debug_table_iiiii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viiii: "+debug_table_viiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  vi: "+debug_table_vi[x]+"  did: "+debug_table_did[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  v: "+debug_table_v[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_jii(x){err("Invalid function pointer '"+x+"' called with signature 'jii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  ii: "+debug_table_ii[x]+"  jiji: "+debug_table_jiji[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  jij: "+debug_table_jij[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  viii: "+debug_table_viii[x]+"  ijiii: "+debug_table_ijiii[x]+"  did: "+debug_table_did[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  v: "+debug_table_v[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_jiiij(x){err("Invalid function pointer '"+x+"' called with signature 'jiiij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: jii: "+debug_table_jii[x]+"  iii: "+debug_table_iii[x]+"  jij: "+debug_table_jij[x]+"  ii: "+debug_table_ii[x]+"  jiiji: "+debug_table_jiiji[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  viii: "+debug_table_viii[x]+"  iiiji: "+debug_table_iiiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  viiii: "+debug_table_viiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  vi: "+debug_table_vi[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  did: "+debug_table_did[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  didd: "+debug_table_didd[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  dd: "+debug_table_dd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  v: "+debug_table_v[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_jiiji(x){err("Invalid function pointer '"+x+"' called with signature 'jiiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: jii: "+debug_table_jii[x]+"  jiji: "+debug_table_jiji[x]+"  iii: "+debug_table_iii[x]+"  jij: "+debug_table_jij[x]+"  ii: "+debug_table_ii[x]+"  iiiji: "+debug_table_iiiji[x]+"  jiiij: "+debug_table_jiiij[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  viii: "+debug_table_viii[x]+"  fii: "+debug_table_fii[x]+"  vii: "+debug_table_vii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  vi: "+debug_table_vi[x]+"  did: "+debug_table_did[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  didd: "+debug_table_didd[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  dd: "+debug_table_dd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  v: "+debug_table_v[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_jij(x){err("Invalid function pointer '"+x+"' called with signature 'jij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: jiji: "+debug_table_jiji[x]+"  jii: "+debug_table_jii[x]+"  ii: "+debug_table_ii[x]+"  vi: "+debug_table_vi[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  did: "+debug_table_did[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  vii: "+debug_table_vii[x]+"  iiiji: "+debug_table_iiiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  didd: "+debug_table_didd[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  viii: "+debug_table_viii[x]+"  dd: "+debug_table_dd[x]+"  v: "+debug_table_v[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiijj: "+debug_table_viiijj[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_jiji(x){err("Invalid function pointer '"+x+"' called with signature 'jiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: jij: "+debug_table_jij[x]+"  jii: "+debug_table_jii[x]+"  ii: "+debug_table_ii[x]+"  jiiji: "+debug_table_jiiji[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  viii: "+debug_table_viii[x]+"  jiiij: "+debug_table_jiiij[x]+"  iiiji: "+debug_table_iiiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  did: "+debug_table_did[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  viiii: "+debug_table_viiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  v: "+debug_table_v[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_v(x){err("Invalid function pointer '"+x+"' called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vi: "+debug_table_vi[x]+"  vii: "+debug_table_vii[x]+"  viii: "+debug_table_viii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  dd: "+debug_table_dd[x]+"  ii: "+debug_table_ii[x]+"  did: "+debug_table_did[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  jii: "+debug_table_jii[x]+"  jij: "+debug_table_jij[x]+"  didd: "+debug_table_didd[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_vi(x){err("Invalid function pointer '"+x+"' called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: v: "+debug_table_v[x]+"  vii: "+debug_table_vii[x]+"  viii: "+debug_table_viii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  did: "+debug_table_did[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  jii: "+debug_table_jii[x]+"  jij: "+debug_table_jij[x]+"  dd: "+debug_table_dd[x]+"  didd: "+debug_table_didd[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_vii(x){err("Invalid function pointer '"+x+"' called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vi: "+debug_table_vi[x]+"  viii: "+debug_table_viii[x]+"  v: "+debug_table_v[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  ii: "+debug_table_ii[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  jii: "+debug_table_jii[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  jiji: "+debug_table_jiji[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viidi(x){err("Invalid function pointer '"+x+"' called with signature 'viidi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  viii: "+debug_table_viii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  viifi: "+debug_table_viifi[x]+"  viiii: "+debug_table_viiii[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  did: "+debug_table_did[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  jiiji: "+debug_table_jiiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  didd: "+debug_table_didd[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  dd: "+debug_table_dd[x]+"  jij: "+debug_table_jij[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viifi(x){err("Invalid function pointer '"+x+"' called with signature 'viifi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  viii: "+debug_table_viii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  viidi: "+debug_table_viidi[x]+"  viiii: "+debug_table_viiii[x]+"  iiii: "+debug_table_iiii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  jiiji: "+debug_table_jiiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  fiii: "+debug_table_fiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  didd: "+debug_table_didd[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  dd: "+debug_table_dd[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viii(x){err("Invalid function pointer '"+x+"' called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiii: "+debug_table_viiii[x]+"  v: "+debug_table_v[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiijj: "+debug_table_viiijj[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  jiji: "+debug_table_jiji[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  iiiji: "+debug_table_iiiji[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiji: "+debug_table_jiiji[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  v: "+debug_table_v[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  iiiji: "+debug_table_iiiji[x]+"  fiii: "+debug_table_fiii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiijj: "+debug_table_viiijj[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  didd: "+debug_table_didd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  dd: "+debug_table_dd[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiiifii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiifii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  viifi: "+debug_table_viifi[x]+"  viiiii: "+debug_table_viiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  fii: "+debug_table_fii[x]+"  iii: "+debug_table_iii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  fiiii: "+debug_table_fiiii[x]+"  viidi: "+debug_table_viidi[x]+"  iiiji: "+debug_table_iiiji[x]+"  fiii: "+debug_table_fiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  ii: "+debug_table_ii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  jii: "+debug_table_jii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  fiiii: "+debug_table_fiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  iiiji: "+debug_table_iiiji[x]+"  fiii: "+debug_table_fiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  didd: "+debug_table_didd[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  dd: "+debug_table_dd[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  fiiii: "+debug_table_fiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  iiiji: "+debug_table_iiiji[x]+"  fiii: "+debug_table_fiii[x]+"  ii: "+debug_table_ii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiiiiifi(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiifi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iiiii: "+debug_table_iiiii[x]+"  viifi: "+debug_table_viifi[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  fiiii: "+debug_table_fiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  fiii: "+debug_table_fiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  ii: "+debug_table_ii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  didd: "+debug_table_didd[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  dd: "+debug_table_dd[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  fiiii: "+debug_table_fiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  iiiji: "+debug_table_iiiji[x]+"  fiii: "+debug_table_fiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  ii: "+debug_table_ii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  viiii: "+debug_table_viiii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  fiiii: "+debug_table_fiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  fiii: "+debug_table_fiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  ii: "+debug_table_ii[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  fiiii: "+debug_table_fiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  fiii: "+debug_table_fiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  ii: "+debug_table_ii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iii: "+debug_table_iii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  fiiii: "+debug_table_fiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  iiiji: "+debug_table_iiiji[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  fiii: "+debug_table_fiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  ii: "+debug_table_ii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  didd: "+debug_table_didd[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  dd: "+debug_table_dd[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iii: "+debug_table_iii[x]+"  fiiii: "+debug_table_fiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  iiiji: "+debug_table_iiiji[x]+"  fiii: "+debug_table_fiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  ii: "+debug_table_ii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  didd: "+debug_table_didd[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  dd: "+debug_table_dd[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iii: "+debug_table_iii[x]+"  fiiii: "+debug_table_fiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  iiiji: "+debug_table_iiiji[x]+"  fiii: "+debug_table_fiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  ii: "+debug_table_ii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  didd: "+debug_table_didd[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  dd: "+debug_table_dd[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiiiiiiiiiiiii(x){err("Invalid function pointer '"+x+"' called with signature 'viiiiiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viiii: "+debug_table_viiii[x]+"  viii: "+debug_table_viii[x]+"  viiiii: "+debug_table_viiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  vii: "+debug_table_vii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  vi: "+debug_table_vi[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  v: "+debug_table_v[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  iii: "+debug_table_iii[x]+"  fiiii: "+debug_table_fiiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  iiiji: "+debug_table_iiiji[x]+"  fiii: "+debug_table_fiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiij: "+debug_table_jiiij[x]+"  jiiji: "+debug_table_jiiji[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiijj: "+debug_table_viiijj[x]+"  jiji: "+debug_table_jiji[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  did: "+debug_table_did[x]+"  jij: "+debug_table_jij[x]+"  ii: "+debug_table_ii[x]+"  didd: "+debug_table_didd[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  dd: "+debug_table_dd[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}function nullFunc_viiijj(x){err("Invalid function pointer '"+x+"' called with signature 'viiijj'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");err("This pointer might make sense in another type signature: viii: "+debug_table_viii[x]+"  vii: "+debug_table_vii[x]+"  vi: "+debug_table_vi[x]+"  v: "+debug_table_v[x]+"  iii: "+debug_table_iii[x]+"  ii: "+debug_table_ii[x]+"  jiiij: "+debug_table_jiiij[x]+"  viiii: "+debug_table_viiii[x]+"  viidi: "+debug_table_viidi[x]+"  viifi: "+debug_table_viifi[x]+"  fiii: "+debug_table_fiii[x]+"  iiii: "+debug_table_iiii[x]+"  iiiji: "+debug_table_iiiji[x]+"  fii: "+debug_table_fii[x]+"  jii: "+debug_table_jii[x]+"  jij: "+debug_table_jij[x]+"  fiiii: "+debug_table_fiiii[x]+"  iiiii: "+debug_table_iiiii[x]+"  iiiiij: "+debug_table_iiiiij[x]+"  viiiii: "+debug_table_viiiii[x]+"  ijiii: "+debug_table_ijiii[x]+"  jiiji: "+debug_table_jiiji[x]+"  jiji: "+debug_table_jiji[x]+"  iiijjji: "+debug_table_iiijjji[x]+"  did: "+debug_table_did[x]+"  iiiiii: "+debug_table_iiiiii[x]+"  viiiiii: "+debug_table_viiiiii[x]+"  didd: "+debug_table_didd[x]+"  dd: "+debug_table_dd[x]+"  iiiiiii: "+debug_table_iiiiiii[x]+"  viiiifii: "+debug_table_viiiifii[x]+"  viiiiiii: "+debug_table_viiiiiii[x]+"  iiiiiiii: "+debug_table_iiiiiiii[x]+"  viiiiiifi: "+debug_table_viiiiiifi[x]+"  viiiiiiii: "+debug_table_viiiiiiii[x]+"  viiiiiiiii: "+debug_table_viiiiiiiii[x]+"  viiiiiiiiii: "+debug_table_viiiiiiiiii[x]+"  viiiiiiiiiii: "+debug_table_viiiiiiiiiii[x]+"  viiiiiiiiiiii: "+debug_table_viiiiiiiiiiii[x]+"  iiiiiiidiiddii: "+debug_table_iiiiiiidiiddii[x]+"  viiiiiiiiiiiiii: "+debug_table_viiiiiiiiiiiiii[x]+"  iiiiiiiiiiiiiifii: "+debug_table_iiiiiiiiiiiiiifii[x]+"  ");abort(x)}Module["wasmTableSize"]=4210;Module["wasmMaxTableSize"]=4210;Module.asmGlobalArg={};Module.asmLibraryArg={"Ba":enlargeMemory,"Aa":getTotalMemory,"wa":abortOnCannotGrowMemory,"d":abortStackOverflow,"n":segfault,"q":alignfault,"H":nullFunc_dd,"_":nullFunc_did,"W":nullFunc_didd,"V":nullFunc_fii,"za":nullFunc_fiii,"ya":nullFunc_fiiii,"l":nullFunc_ii,"w":nullFunc_iii,"o":nullFunc_iiii,"p":nullFunc_iiiii,"v":nullFunc_iiiiii,"x":nullFunc_iiiiiii,"xa":nullFunc_iiiiiiidiiddii,"s":nullFunc_iiiiiiii,"U":nullFunc_iiiiiiiiiiiiiifii,"va":nullFunc_iiiiij,"ua":nullFunc_iiiji,"ta":nullFunc_iiijjji,"sa":nullFunc_ijiii,"ra":nullFunc_jii,"T":nullFunc_jiiij,"S":nullFunc_jiiji,"qa":nullFunc_jij,"pa":nullFunc_jiji,"R":nullFunc_v,"k":nullFunc_vi,"r":nullFunc_vii,"Q":nullFunc_viidi,"oa":nullFunc_viifi,"g":nullFunc_viii,"h":nullFunc_viiii,"na":nullFunc_viiiifii,"t":nullFunc_viiiii,"f":nullFunc_viiiiii,"ma":nullFunc_viiiiiifi,"la":nullFunc_viiiiiii,"m":nullFunc_viiiiiiii,"j":nullFunc_viiiiiiiii,"D":nullFunc_viiiiiiiiii,"C":nullFunc_viiiiiiiiiii,"i":nullFunc_viiiiiiiiiiii,"I":nullFunc_viiiiiiiiiiiiii,"B":nullFunc_viiijj,"ka":___buildEnvironment,"ja":___lock,"P":___setErrNo,"ia":___syscall140,"O":___syscall146,"ha":___syscall195,"ga":___syscall220,"N":___syscall221,"fa":___syscall3,"ea":___syscall5,"M":___syscall54,"G":___syscall6,"L":___unlock,"e":_abort,"da":_clock,"ca":_clock_gettime,"ba":_emscripten_memcpy_big,"u":_exit,"aa":_fabs,"y":_getenv,"$":_gettimeofday,"Z":_gmtime_r,"A":_llvm_exp2_f32,"z":_llvm_exp2_f64,"F":_llvm_log2_f32,"E":_llvm_stackrestore,"K":_llvm_stacksave,"Y":_llvm_trunc_f64,"J":_nanosleep,"X":_strftime,"a":DYNAMICTOP_PTR,"b":STACKTOP,"c":STACK_MAX};var asm=Module["asm"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);var real____emscripten_environ_constructor=asm["___emscripten_environ_constructor"];asm["___emscripten_environ_constructor"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real____emscripten_environ_constructor.apply(null,arguments)});var real___get_daylight=asm["__get_daylight"];asm["__get_daylight"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___get_daylight.apply(null,arguments)});var real___get_environ=asm["__get_environ"];asm["__get_environ"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___get_environ.apply(null,arguments)});var real___get_timezone=asm["__get_timezone"];asm["__get_timezone"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___get_timezone.apply(null,arguments)});var real___get_tzname=asm["__get_tzname"];asm["__get_tzname"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real___get_tzname.apply(null,arguments)});var real__close_muxer=asm["_close_muxer"];asm["_close_muxer"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__close_muxer.apply(null,arguments)});var real__free=asm["_free"];asm["_free"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__free.apply(null,arguments)});var real__get_next=asm["_get_next"];asm["_get_next"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__get_next.apply(null,arguments)});var real__get_next_frame=asm["_get_next_frame"];asm["_get_next_frame"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__get_next_frame.apply(null,arguments)});var real__init_muxer=asm["_init_muxer"];asm["_init_muxer"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__init_muxer.apply(null,arguments)});var real__llvm_bswap_i16=asm["_llvm_bswap_i16"];asm["_llvm_bswap_i16"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__llvm_bswap_i16.apply(null,arguments)});var real__llvm_bswap_i32=asm["_llvm_bswap_i32"];asm["_llvm_bswap_i32"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__llvm_bswap_i32.apply(null,arguments)});var real__llvm_rint_f64=asm["_llvm_rint_f64"];asm["_llvm_rint_f64"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__llvm_rint_f64.apply(null,arguments)});var real__llvm_round_f64=asm["_llvm_round_f64"];asm["_llvm_round_f64"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__llvm_round_f64.apply(null,arguments)});var real__malloc=asm["_malloc"];asm["_malloc"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__malloc.apply(null,arguments)});var real__memmove=asm["_memmove"];asm["_memmove"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__memmove.apply(null,arguments)});var real__rintf=asm["_rintf"];asm["_rintf"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__rintf.apply(null,arguments)});var real__sbrk=asm["_sbrk"];asm["_sbrk"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__sbrk.apply(null,arguments)});var real__set_frame=asm["_set_frame"];asm["_set_frame"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real__set_frame.apply(null,arguments)});var real_establishStackSpace=asm["establishStackSpace"];asm["establishStackSpace"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real_establishStackSpace.apply(null,arguments)});var real_setDynamicTop=asm["setDynamicTop"];asm["setDynamicTop"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real_setDynamicTop.apply(null,arguments)});var real_setThrew=asm["setThrew"];asm["setThrew"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real_setThrew.apply(null,arguments)});var real_stackAlloc=asm["stackAlloc"];asm["stackAlloc"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real_stackAlloc.apply(null,arguments)});var real_stackRestore=asm["stackRestore"];asm["stackRestore"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real_stackRestore.apply(null,arguments)});var real_stackSave=asm["stackSave"];asm["stackSave"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return real_stackSave.apply(null,arguments)});Module["asm"]=asm;var ___emscripten_environ_constructor=Module["___emscripten_environ_constructor"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ca"].apply(null,arguments)});var __get_daylight=Module["__get_daylight"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Da"].apply(null,arguments)});var __get_environ=Module["__get_environ"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ea"].apply(null,arguments)});var __get_timezone=Module["__get_timezone"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Fa"].apply(null,arguments)});var __get_tzname=Module["__get_tzname"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ga"].apply(null,arguments)});var _close_muxer=Module["_close_muxer"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ha"].apply(null,arguments)});var _emscripten_replace_memory=Module["_emscripten_replace_memory"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["_emscripten_replace_memory"].apply(null,arguments)});var _free=Module["_free"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ia"].apply(null,arguments)});var _get_next=Module["_get_next"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ja"].apply(null,arguments)});var _get_next_frame=Module["_get_next_frame"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ka"].apply(null,arguments)});var _init_muxer=Module["_init_muxer"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["La"].apply(null,arguments)});var _llvm_bswap_i16=Module["_llvm_bswap_i16"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ma"].apply(null,arguments)});var _llvm_bswap_i32=Module["_llvm_bswap_i32"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Na"].apply(null,arguments)});var _llvm_rint_f64=Module["_llvm_rint_f64"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Oa"].apply(null,arguments)});var _llvm_round_f64=Module["_llvm_round_f64"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Pa"].apply(null,arguments)});var _malloc=Module["_malloc"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Qa"].apply(null,arguments)});var _memmove=Module["_memmove"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ra"].apply(null,arguments)});var _rintf=Module["_rintf"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Sa"].apply(null,arguments)});var _sbrk=Module["_sbrk"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ta"].apply(null,arguments)});var _set_frame=Module["_set_frame"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ua"].apply(null,arguments)});var establishStackSpace=Module["establishStackSpace"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Xa"].apply(null,arguments)});var setDynamicTop=Module["setDynamicTop"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ya"].apply(null,arguments)});var setThrew=Module["setThrew"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Za"].apply(null,arguments)});var stackAlloc=Module["stackAlloc"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["_a"].apply(null,arguments)});var stackRestore=Module["stackRestore"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["$a"].apply(null,arguments)});var stackSave=Module["stackSave"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ab"].apply(null,arguments)});var dynCall_v=Module["dynCall_v"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Va"].apply(null,arguments)});var dynCall_vi=Module["dynCall_vi"]=(function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Wa"].apply(null,arguments)});Module["asm"]=asm;if(!Module["intArrayFromString"])Module["intArrayFromString"]=(function(){abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["intArrayToString"])Module["intArrayToString"]=(function(){abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["ccall"])Module["ccall"]=(function(){abort("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["cwrap"])Module["cwrap"]=(function(){abort("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["setValue"])Module["setValue"]=(function(){abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["getValue"])Module["getValue"]=(function(){abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["allocate"])Module["allocate"]=(function(){abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["getMemory"])Module["getMemory"]=(function(){abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});if(!Module["Pointer_stringify"])Module["Pointer_stringify"]=(function(){abort("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["AsciiToString"])Module["AsciiToString"]=(function(){abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["stringToAscii"])Module["stringToAscii"]=(function(){abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["UTF8ArrayToString"])Module["UTF8ArrayToString"]=(function(){abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["UTF8ToString"])Module["UTF8ToString"]=(function(){abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["stringToUTF8Array"])Module["stringToUTF8Array"]=(function(){abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["stringToUTF8"])Module["stringToUTF8"]=(function(){abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["lengthBytesUTF8"])Module["lengthBytesUTF8"]=(function(){abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["UTF16ToString"])Module["UTF16ToString"]=(function(){abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["stringToUTF16"])Module["stringToUTF16"]=(function(){abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["lengthBytesUTF16"])Module["lengthBytesUTF16"]=(function(){abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["UTF32ToString"])Module["UTF32ToString"]=(function(){abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["stringToUTF32"])Module["stringToUTF32"]=(function(){abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["lengthBytesUTF32"])Module["lengthBytesUTF32"]=(function(){abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["allocateUTF8"])Module["allocateUTF8"]=(function(){abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["stackTrace"])Module["stackTrace"]=(function(){abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["addOnPreRun"])Module["addOnPreRun"]=(function(){abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["addOnInit"])Module["addOnInit"]=(function(){abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["addOnPreMain"])Module["addOnPreMain"]=(function(){abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["addOnExit"])Module["addOnExit"]=(function(){abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["addOnPostRun"])Module["addOnPostRun"]=(function(){abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["writeStringToMemory"])Module["writeStringToMemory"]=(function(){abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["writeArrayToMemory"])Module["writeArrayToMemory"]=(function(){abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["writeAsciiToMemory"])Module["writeAsciiToMemory"]=(function(){abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["addRunDependency"])Module["addRunDependency"]=(function(){abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});if(!Module["removeRunDependency"])Module["removeRunDependency"]=(function(){abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});if(!Module["ENV"])Module["ENV"]=(function(){abort("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["FS"])Module["FS"]=(function(){abort("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["FS_createFolder"])Module["FS_createFolder"]=(function(){abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});if(!Module["FS_createPath"])Module["FS_createPath"]=(function(){abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});if(!Module["FS_createDataFile"])Module["FS_createDataFile"]=(function(){abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});if(!Module["FS_createPreloadedFile"])Module["FS_createPreloadedFile"]=(function(){abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});if(!Module["FS_createLazyFile"])Module["FS_createLazyFile"]=(function(){abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});if(!Module["FS_createLink"])Module["FS_createLink"]=(function(){abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});if(!Module["FS_createDevice"])Module["FS_createDevice"]=(function(){abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});if(!Module["FS_unlink"])Module["FS_unlink"]=(function(){abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});if(!Module["GL"])Module["GL"]=(function(){abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["staticAlloc"])Module["staticAlloc"]=(function(){abort("'staticAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["dynamicAlloc"])Module["dynamicAlloc"]=(function(){abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["warnOnce"])Module["warnOnce"]=(function(){abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["loadDynamicLibrary"])Module["loadDynamicLibrary"]=(function(){abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["loadWebAssemblyModule"])Module["loadWebAssemblyModule"]=(function(){abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["getLEB"])Module["getLEB"]=(function(){abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["getFunctionTables"])Module["getFunctionTables"]=(function(){abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["alignFunctionTables"])Module["alignFunctionTables"]=(function(){abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["registerFunctions"])Module["registerFunctions"]=(function(){abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["addFunction"])Module["addFunction"]=(function(){abort("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["removeFunction"])Module["removeFunction"]=(function(){abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["getFuncWrapper"])Module["getFuncWrapper"]=(function(){abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["prettyPrint"])Module["prettyPrint"]=(function(){abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["makeBigInt"])Module["makeBigInt"]=(function(){abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["dynCall"])Module["dynCall"]=(function(){abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["getCompilerSetting"])Module["getCompilerSetting"]=(function(){abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["stackSave"])Module["stackSave"]=(function(){abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["stackRestore"])Module["stackRestore"]=(function(){abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["stackAlloc"])Module["stackAlloc"]=(function(){abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["establishStackSpace"])Module["establishStackSpace"]=(function(){abort("'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["print"])Module["print"]=(function(){abort("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["printErr"])Module["printErr"]=(function(){abort("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});if(!Module["ALLOC_NORMAL"])Object.defineProperty(Module,"ALLOC_NORMAL",{get:(function(){abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")})});if(!Module["ALLOC_STACK"])Object.defineProperty(Module,"ALLOC_STACK",{get:(function(){abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")})});if(!Module["ALLOC_STATIC"])Object.defineProperty(Module,"ALLOC_STATIC",{get:(function(){abort("'ALLOC_STATIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")})});if(!Module["ALLOC_DYNAMIC"])Object.defineProperty(Module,"ALLOC_DYNAMIC",{get:(function(){abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")})});if(!Module["ALLOC_NONE"])Object.defineProperty(Module,"ALLOC_NONE",{get:(function(){abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")})});Module["then"]=(function(func){if(Module["calledRun"]){func(Module)}else{var old=Module["onRuntimeInitialized"];Module["onRuntimeInitialized"]=(function(){if(old)old();func(Module)})}return Module});function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};function run(args){args=args||Module["arguments"];if(runDependencies>0){return}writeStackCookie();preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();assert(!Module["_main"],'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}checkStackCookie()}Module["run"]=run;function checkUnflushedContent(){var print=out;var printErr=err;var has=false;out=err=(function(x){has=true});try{var flush=flush_NO_FILESYSTEM;if(flush)flush(0)}catch(e){}out=print;err=printErr;if(has){warnOnce("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.");warnOnce("(this may also be due to not including full filesystem support - try building with -s FORCE_FILESYSTEM=1)")}}function exit(status,implicit){checkUnflushedContent();if(implicit&&Module["noExitRuntime"]&&status===0){return}if(Module["noExitRuntime"]){if(!implicit){err("exit("+status+") called, but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)")}}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}Module["quit"](status,new ExitStatus(status))}var abortDecorators=[];function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;var extra="";var output="abort("+what+") at "+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what)}))}throw output}Module["abort"]=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}Module["noExitRuntime"]=true;run()





  return Demuxer8;
}
);
})();
if (typeof exports === 'object' && typeof module === 'object')
    module.exports = Demuxer8;
  else if (typeof define === 'function' && define['amd'])
    define([], function() { return Demuxer8; });
  else if (typeof exports === 'object')
    exports["Demuxer8"] = Demuxer8;
  